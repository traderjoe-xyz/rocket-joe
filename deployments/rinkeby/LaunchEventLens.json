{
  "address": "0x9b112b7BB37f38A3f2D7C45Dc34c899c51383097",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rocketJoeFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "getAllLaunchEvents",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "auctionStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "avaxReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "floorPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "incentives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuerTimelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllocation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWithdrawPenalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pairBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "penalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseOneDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseOneNoFeeDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseTwoDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rJoePerAvax",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenIncentivesPercent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userTimelock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pair",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allocation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "hasWithdrawnPair",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasWithdrawnIncentives",
                  "type": "bool"
                }
              ],
              "internalType": "struct ILaunchEvent.UserInfo",
              "name": "userInfo",
              "type": "tuple"
            }
          ],
          "internalType": "struct LaunchEventLens.LaunchEventData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getAllLaunchEventsWithUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "auctionStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "avaxReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "floorPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "incentives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuerTimelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllocation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWithdrawPenalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pairBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "penalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseOneDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseOneNoFeeDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseTwoDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rJoePerAvax",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenIncentivesPercent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userTimelock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pair",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allocation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "hasWithdrawnPair",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasWithdrawnIncentives",
                  "type": "bool"
                }
              ],
              "internalType": "struct ILaunchEvent.UserInfo",
              "name": "userInfo",
              "type": "tuple"
            }
          ],
          "internalType": "struct LaunchEventLens.LaunchEventData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILaunchEvent",
          "name": "_launchEvent",
          "type": "address"
        }
      ],
      "name": "getLaunchEventData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "auctionStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "avaxReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "floorPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "incentives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuerTimelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllocation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWithdrawPenalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pairBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "penalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseOneDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseOneNoFeeDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseTwoDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rJoePerAvax",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenIncentivesPercent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userTimelock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pair",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allocation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "hasWithdrawnPair",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasWithdrawnIncentives",
                  "type": "bool"
                }
              ],
              "internalType": "struct ILaunchEvent.UserInfo",
              "name": "userInfo",
              "type": "tuple"
            }
          ],
          "internalType": "struct LaunchEventLens.LaunchEventData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILaunchEvent",
          "name": "_launchEvent",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserLaunchEventData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "auctionStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "avaxReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "floorPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "incentives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issuerTimelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllocation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWithdrawPenalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pairBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "penalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseOneDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseOneNoFeeDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "phaseTwoDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rJoePerAvax",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenIncentivesPercent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userTimelock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pair",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allocation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "hasWithdrawnPair",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasWithdrawnIncentives",
                  "type": "bool"
                }
              ],
              "internalType": "struct ILaunchEvent.UserInfo",
              "name": "userInfo",
              "type": "tuple"
            }
          ],
          "internalType": "struct LaunchEventLens.LaunchEventData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rocketJoeFactory",
      "outputs": [
        {
          "internalType": "contract IRocketJoeFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf1b5e87e3fe83f5806353c21c888288554fa53525235d8c0723164a73a728af8",
  "receipt": {
    "to": null,
    "from": "0x5D3e4C0FE11e0aE4c32F0FF74B4544C49538AC61",
    "contractAddress": "0x9b112b7BB37f38A3f2D7C45Dc34c899c51383097",
    "transactionIndex": 3,
    "gasUsed": "1739649",
    "logsBloom": "0x
    "blockHash": "0x9b388fe3f454d434bca7a283b0d785e6eb73ff94e8fa3f31742681e9229a40f4",
    "transactionHash": "0xf1b5e87e3fe83f5806353c21c888288554fa53525235d8c0723164a73a728af8",
    "logs": [],
    "blockNumber": 10083946,
    "cumulativeGasUsed": "2291523",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xB2342Ee4C8514f45157DCe92F00C88Aa007DD95a"],
  "numDeployments": 1,
  "solcInputHash": "184d9f0d13955abd107c051fbf2224d6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rocketJoeFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"getAllLaunchEvents\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"auctionStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaxReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"floorPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incentives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuerTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseOneDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseOneNoFeeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseTwoDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIncentivesPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userTimelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnPair\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnIncentives\",\"type\":\"bool\"}],\"internalType\":\"struct ILaunchEvent.UserInfo\",\"name\":\"userInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct LaunchEventLens.LaunchEventData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAllLaunchEventsWithUser\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"auctionStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaxReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"floorPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incentives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuerTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseOneDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseOneNoFeeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseTwoDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIncentivesPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userTimelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnPair\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnIncentives\",\"type\":\"bool\"}],\"internalType\":\"struct ILaunchEvent.UserInfo\",\"name\":\"userInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct LaunchEventLens.LaunchEventData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILaunchEvent\",\"name\":\"_launchEvent\",\"type\":\"address\"}],\"name\":\"getLaunchEventData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"auctionStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaxReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"floorPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incentives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuerTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseOneDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseOneNoFeeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseTwoDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIncentivesPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userTimelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnPair\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnIncentives\",\"type\":\"bool\"}],\"internalType\":\"struct ILaunchEvent.UserInfo\",\"name\":\"userInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct LaunchEventLens.LaunchEventData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILaunchEvent\",\"name\":\"_launchEvent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLaunchEventData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"auctionStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaxReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"floorPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"incentives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuerTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseOneDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseOneNoFeeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"phaseTwoDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIncentivesPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userTimelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnPair\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasWithdrawnIncentives\",\"type\":\"bool\"}],\"internalType\":\"struct ILaunchEvent.UserInfo\",\"name\":\"userInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct LaunchEventLens.LaunchEventData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rocketJoeFactory\",\"outputs\":[{\"internalType\":\"contract IRocketJoeFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_rocketJoeFactory\":\"Address of the RocketJoeFactory\"}},\"getAllLaunchEvents(uint256,uint256)\":{\"params\":{\"_limit\":\"Maximum number of launch event datas to return\",\"_offset\":\"Index to start at when looking up launch events\"},\"returns\":{\"_0\":\"Array of all launch event datas\"}},\"getAllLaunchEventsWithUser(uint256,uint256,address)\":{\"params\":{\"_limit\":\"Maximum number of launch event datas to return\",\"_offset\":\"Index to start at when looking up launch events\",\"_user\":\"User to lookup\"},\"returns\":{\"_0\":\"Array of all launch event datas with user info\"}},\"getLaunchEventData(address)\":{\"params\":{\"_launchEvent\":\"Launch event to lookup\"},\"returns\":{\"_0\":\"Launch event data for the given `_launchEvent`\"}},\"getUserLaunchEventData(address,address)\":{\"params\":{\"_launchEvent\":\"Launch event to lookup\",\"_user\":\"User to look up\"},\"returns\":{\"_0\":\"Launch event data for the given `_launchEvent` and `_user`\"}}},\"title\":\"Launch Event Lens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Create a new instance with required parameters\"},\"getAllLaunchEvents(uint256,uint256)\":{\"notice\":\"Get all launch event datas\"},\"getAllLaunchEventsWithUser(uint256,uint256,address)\":{\"notice\":\"Get all launch event datas with a given `_user`\"},\"getLaunchEventData(address)\":{\"notice\":\"Get launch event data for a given launch event\"},\"getUserLaunchEventData(address,address)\":{\"notice\":\"Get launch event data for a given launch event and user\"}},\"notice\":\"Helper contract to fetch launch event data\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LaunchEventLens.sol\":\"LaunchEventLens\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/LaunchEventLens.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/ILaunchEvent.sol\\\";\\nimport \\\"./interfaces/IRocketJoeFactory.sol\\\";\\n\\n/// @title Launch Event Lens\\n/// @author Trader Joe\\n/// @notice Helper contract to fetch launch event data\\ncontract LaunchEventLens {\\n    struct LaunchEventData {\\n        uint256 auctionStart;\\n        uint256 avaxReserve;\\n        uint256 floorPrice;\\n        uint256 incentives;\\n        uint256 issuerTimelock;\\n        uint256 maxAllocation;\\n        uint256 maxWithdrawPenalty;\\n        uint256 pairBalance;\\n        uint256 penalty;\\n        uint256 phaseOneDuration;\\n        uint256 phaseOneNoFeeDuration;\\n        uint256 phaseTwoDuration;\\n        uint256 rJoePerAvax;\\n        uint256 tokenDecimals;\\n        uint256 tokenIncentivesPercent;\\n        uint256 tokenReserve;\\n        uint256 userTimelock;\\n        address id;\\n        address token;\\n        address pair;\\n        ILaunchEvent.UserInfo userInfo;\\n    }\\n\\n    IRocketJoeFactory public rocketJoeFactory;\\n\\n    /// @notice Create a new instance with required parameters\\n    /// @param _rocketJoeFactory Address of the RocketJoeFactory\\n    constructor(address _rocketJoeFactory) {\\n        rocketJoeFactory = IRocketJoeFactory(_rocketJoeFactory);\\n    }\\n\\n    /// @notice Get all launch event datas\\n    /// @param _offset Index to start at when looking up launch events\\n    /// @param _limit Maximum number of launch event datas to return\\n    /// @return Array of all launch event datas\\n    function getAllLaunchEvents(uint256 _offset, uint256 _limit)\\n        external\\n        view\\n        returns (LaunchEventData[] memory)\\n    {\\n        LaunchEventData[] memory launchEventDatas;\\n        uint256 numLaunchEvents = rocketJoeFactory.numLaunchEvents();\\n\\n        if (_offset >= numLaunchEvents || _limit == 0) {\\n            return launchEventDatas;\\n        }\\n\\n        uint256 end = _offset + _limit > numLaunchEvents\\n            ? numLaunchEvents\\n            : _offset + _limit;\\n        launchEventDatas = new LaunchEventData[](end - _offset);\\n\\n        for (uint256 i = _offset; i < end; i++) {\\n            address launchEventAddr = rocketJoeFactory.allRJLaunchEvents(i);\\n            ILaunchEvent launchEvent = ILaunchEvent(launchEventAddr);\\n            launchEventDatas[i] = getLaunchEventData(launchEvent);\\n        }\\n\\n        return launchEventDatas;\\n    }\\n\\n    /// @notice Get all launch event datas with a given `_user`\\n    /// @param _offset Index to start at when looking up launch events\\n    /// @param _limit Maximum number of launch event datas to return\\n    /// @param _user User to lookup\\n    /// @return Array of all launch event datas with user info\\n    function getAllLaunchEventsWithUser(\\n        uint256 _offset,\\n        uint256 _limit,\\n        address _user\\n    ) external view returns (LaunchEventData[] memory) {\\n        LaunchEventData[] memory launchEventDatas;\\n        uint256 numLaunchEvents = rocketJoeFactory.numLaunchEvents();\\n\\n        if (_offset >= numLaunchEvents || _limit == 0) {\\n            return launchEventDatas;\\n        }\\n\\n        uint256 end = _offset + _limit > numLaunchEvents\\n            ? numLaunchEvents\\n            : _offset + _limit;\\n        launchEventDatas = new LaunchEventData[](end - _offset);\\n\\n        for (uint256 i = _offset; i < end; i++) {\\n            address launchEventAddr = rocketJoeFactory.allRJLaunchEvents(i);\\n            ILaunchEvent launchEvent = ILaunchEvent(launchEventAddr);\\n            launchEventDatas[i] = getUserLaunchEventData(launchEvent, _user);\\n        }\\n\\n        return launchEventDatas;\\n    }\\n\\n    /// @notice Get launch event data for a given launch event and user\\n    /// @param _launchEvent Launch event to lookup\\n    /// @param _user User to look up\\n    /// @return Launch event data for the given `_launchEvent` and `_user`\\n    function getUserLaunchEventData(ILaunchEvent _launchEvent, address _user)\\n        public\\n        view\\n        returns (LaunchEventData memory)\\n    {\\n        LaunchEventData memory launchEventData = getLaunchEventData(\\n            _launchEvent\\n        );\\n        launchEventData.incentives = _launchEvent.getIncentives(_user);\\n        launchEventData.pairBalance = _launchEvent.pairBalance(_user);\\n        launchEventData.userInfo = _launchEvent.getUserInfo(_user);\\n        return launchEventData;\\n    }\\n\\n    /// @notice Get launch event data for a given launch event\\n    /// @param _launchEvent Launch event to lookup\\n    /// @return Launch event data for the given `_launchEvent`\\n    function getLaunchEventData(ILaunchEvent _launchEvent)\\n        public\\n        view\\n        returns (LaunchEventData memory)\\n    {\\n        (uint256 avaxReserve, uint256 tokenReserve) = _launchEvent\\n            .getReserves();\\n        IERC20Metadata token = _launchEvent.token();\\n\\n        return\\n            LaunchEventData({\\n                auctionStart: _launchEvent.auctionStart(),\\n                avaxReserve: avaxReserve,\\n                floorPrice: _launchEvent.floorPrice(),\\n                incentives: 0,\\n                issuerTimelock: _launchEvent.issuerTimelock(),\\n                maxAllocation: _launchEvent.maxAllocation(),\\n                maxWithdrawPenalty: _launchEvent.maxWithdrawPenalty(),\\n                penalty: _launchEvent.getPenalty(),\\n                pairBalance: 0,\\n                phaseOneDuration: _launchEvent.PHASE_ONE_DURATION(),\\n                phaseOneNoFeeDuration: _launchEvent.PHASE_ONE_NO_FEE_DURATION(),\\n                phaseTwoDuration: _launchEvent.PHASE_TWO_DURATION(),\\n                rJoePerAvax: _launchEvent.rJoePerAvax(),\\n                tokenDecimals: token.decimals(),\\n                tokenIncentivesPercent: _launchEvent.tokenIncentivesPercent(),\\n                tokenReserve: tokenReserve,\\n                userTimelock: _launchEvent.userTimelock(),\\n                id: address(_launchEvent),\\n                token: address(token),\\n                pair: address(_launchEvent.pair()),\\n                userInfo: ILaunchEvent.UserInfo({\\n                    allocation: 0,\\n                    balance: 0,\\n                    hasWithdrawnPair: false,\\n                    hasWithdrawnIncentives: false\\n                })\\n            });\\n    }\\n}\\n\",\"keccak256\":\"0x6667209425a0d5adbebb710a42db47ed0ee142f074c3bd7e8ed50d52c876eb96\",\"license\":\"MIT\"},\"contracts/interfaces/IJoePair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.8.0;\\n\\ninterface IJoePair {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external pure returns (string memory);\\n\\n    function symbol() external pure returns (string memory);\\n\\n    function decimals() external pure returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n    event Burn(\\n        address indexed sender,\\n        uint256 amount0,\\n        uint256 amount1,\\n        address indexed to\\n    );\\n    event Swap(\\n        address indexed sender,\\n        uint256 amount0In,\\n        uint256 amount1In,\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function price0CumulativeLast() external view returns (uint256);\\n\\n    function price1CumulativeLast() external view returns (uint256);\\n\\n    function kLast() external view returns (uint256);\\n\\n    function mint(address to) external returns (uint256 liquidity);\\n\\n    function burn(address to)\\n        external\\n        returns (uint256 amount0, uint256 amount1);\\n\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n\\n    function skim(address to) external;\\n\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x04c20e91f949852d3b8d6387443abc7816e8bd851de53676ab0fe948699fb63e\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ILaunchEvent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nimport \\\"./IJoePair.sol\\\";\\n\\ninterface ILaunchEvent {\\n    struct UserInfo {\\n        uint256 allocation;\\n        uint256 balance;\\n        bool hasWithdrawnPair;\\n        bool hasWithdrawnIncentives;\\n    }\\n\\n    function initialize(\\n        address _issuer,\\n        uint256 _phaseOne,\\n        address _token,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external;\\n\\n    function auctionStart() external view returns (uint256);\\n\\n    function PHASE_ONE_DURATION() external view returns (uint256);\\n\\n    function PHASE_ONE_NO_FEE_DURATION() external view returns (uint256);\\n\\n    function PHASE_TWO_DURATION() external view returns (uint256);\\n\\n    function tokenIncentivesPercent() external view returns (uint256);\\n\\n    function floorPrice() external view returns (uint256);\\n\\n    function userTimelock() external view returns (uint256);\\n\\n    function issuerTimelock() external view returns (uint256);\\n\\n    function maxAllocation() external view returns (uint256);\\n\\n    function maxWithdrawPenalty() external view returns (uint256);\\n\\n    function fixedWithdrawPenalty() external view returns (uint256);\\n\\n    function rJoePerAvax() external view returns (uint256);\\n\\n    function getReserves() external view returns (uint256, uint256);\\n\\n    function token() external view returns (IERC20Metadata);\\n\\n    function pair() external view returns (IJoePair);\\n\\n    function pairBalance(address) external view returns (uint256);\\n\\n    function getUserInfo(address) external view returns (UserInfo memory);\\n\\n    function getPenalty() external view returns (uint256);\\n\\n    function getIncentives(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xdb8de63844ae85bbfccc9d9cf273460e9ba980cb1b4de8e771a390db8107ef00\",\"license\":\"MIT\"},\"contracts/interfaces/IRocketJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRocketJoeFactory {\\n    event RJLaunchEventCreated(\\n        address indexed launchEvent,\\n        address indexed issuer,\\n        address indexed token,\\n        uint256 phaseOneStartTime,\\n        uint256 phaseTwoStartTime,\\n        uint256 phaseThreeStartTime,\\n        address rJoe,\\n        uint256 rJoePerAvax\\n    );\\n    event SetRJoe(address indexed token);\\n    event SetPenaltyCollector(address indexed collector);\\n    event SetRouter(address indexed router);\\n    event SetFactory(address indexed factory);\\n    event SetRJoePerAvax(uint256 rJoePerAvax);\\n    event SetEventImplementation(address indexed implementation);\\n    event IssuingTokenDeposited(address indexed token, uint256 amount);\\n    event PhaseDurationChanged(uint256 phase, uint256 duration);\\n    event NoFeeDurationChanged(uint256 duration);\\n\\n    function eventImplementation() external view returns (address);\\n\\n    function penaltyCollector() external view returns (address);\\n\\n    function wavax() external view returns (address);\\n\\n    function rJoePerAvax() external view returns (uint256);\\n\\n    function router() external view returns (address);\\n\\n    function factory() external view returns (address);\\n\\n    function rJoe() external view returns (address);\\n\\n    function PHASE_ONE_DURATION() external view returns (uint256);\\n\\n    function PHASE_ONE_NO_FEE_DURATION() external view returns (uint256);\\n\\n    function PHASE_TWO_DURATION() external view returns (uint256);\\n\\n    function getRJLaunchEvent(address token)\\n        external\\n        view\\n        returns (address launchEvent);\\n\\n    function isRJLaunchEvent(address token) external view returns (bool);\\n\\n    function allRJLaunchEvents(uint256) external view returns (address pair);\\n\\n    function numLaunchEvents() external view returns (uint256);\\n\\n    function createRJLaunchEvent(\\n        address _issuer,\\n        uint256 _phaseOneStartTime,\\n        address _token,\\n        uint256 _tokenAmount,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external returns (address pair);\\n\\n    function setPenaltyCollector(address) external;\\n\\n    function setRouter(address) external;\\n\\n    function setFactory(address) external;\\n\\n    function setRJoePerAvax(uint256) external;\\n\\n    function setPhaseDuration(uint256, uint256) external;\\n\\n    function setPhaseOneNoFeeDuration(uint256) external;\\n\\n    function setEventImplementation(address) external;\\n}\\n\",\"keccak256\":\"0x73de576250f8760735724cb174f70520afaf871197be236a1fdb7d7cdbe91878\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001f3838038062001f38833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b6000815190506200008f8162000100565b92915050565b600060208284031215620000ae57620000ad620000fb565b5b6000620000be848285016200007e565b91505092915050565b6000620000d482620000db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200010b81620000c7565b81146200011757600080fd5b50565b611e0e806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063263ebc111461005c57806342ce61271461008c5780639ed6c9d6146100bc578063a0677aac146100ec578063f3fbd7d61461011c575b600080fd5b61007660048036038101906100719190611463565b61013a565b6040516100839190611a0a565b60405180910390f35b6100a660048036038101906100a191906114e3565b610393565b6040516100b39190611a0a565b60405180910390f35b6100d660048036038101906100d191906113c9565b6105ee565b6040516100e39190611a47565b60405180910390f35b6101066004803603810190610101919061139c565b6107c3565b6040516101139190611a47565b60405180910390f35b6101246110a8565b6040516101319190611a2c565b60405180910390f35b60608060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbaab6d96040518163ffffffff1660e01b815260040160206040518083038186803b1580156101a657600080fd5b505afa1580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de9190611436565b905080851015806101ef5750600084145b156101fe57819250505061038d565b600081858761020d9190611adc565b1161022357848661021e9190611adc565b610225565b815b905085816102339190611b32565b67ffffffffffffffff81111561024c5761024b611ced565b5b60405190808252806020026020018201604052801561028557816020015b6102726110cc565b81526020019060019003908161026a5790505b50925060008690505b818110156103855760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663831b000d836040518263ffffffff1660e01b81526004016102f29190611a63565b60206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190611315565b90506000819050610352816107c3565b86848151811061036557610364611cbe565b5b60200260200101819052505050808061037d90611c46565b91505061028e565b508293505050505b92915050565b60608060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbaab6d96040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ff57600080fd5b505afa158015610413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104379190611436565b905080861015806104485750600085145b156104575781925050506105e7565b60008186886104669190611adc565b1161047c5785876104779190611adc565b61047e565b815b9050868161048c9190611b32565b67ffffffffffffffff8111156104a5576104a4611ced565b5b6040519080825280602002602001820160405280156104de57816020015b6104cb6110cc565b8152602001906001900390816104c35790505b50925060008790505b818110156105df5760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663831b000d836040518263ffffffff1660e01b815260040161054b9190611a63565b60206040518083038186803b15801561056357600080fd5b505afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b9190611315565b905060008190506105ac81896105ee565b8684815181106105bf576105be611cbe565b5b6020026020010181905250505080806105d790611c46565b9150506104e7565b508293505050505b9392505050565b6105f66110cc565b6000610601846107c3565b90508373ffffffffffffffffffffffffffffffffffffffff166378912f53846040518263ffffffff1660e01b815260040161063c91906119ef565b60206040518083038186803b15801561065457600080fd5b505afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190611436565b8160600181815250508373ffffffffffffffffffffffffffffffffffffffff1663382db5b5846040518263ffffffff1660e01b81526004016106ce91906119ef565b60206040518083038186803b1580156106e657600080fd5b505afa1580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190611436565b8160e00181815250508373ffffffffffffffffffffffffffffffffffffffff16636386c1c7846040518263ffffffff1660e01b815260040161076091906119ef565b60806040518083038186803b15801561077857600080fd5b505afa15801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b09190611409565b8161028001819052508091505092915050565b6107cb6110cc565b6000808373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401604080518083038186803b15801561081357600080fd5b505afa158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b91906114a3565b9150915060008473ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561089757600080fd5b505afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf9190611342565b9050604051806102a001604052808673ffffffffffffffffffffffffffffffffffffffff16634f245ef76040518163ffffffff1660e01b815260040160206040518083038186803b15801561092357600080fd5b505afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190611436565b81526020018481526020018673ffffffffffffffffffffffffffffffffffffffff16639363c8126040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ac57600080fd5b505afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e49190611436565b8152602001600081526020018673ffffffffffffffffffffffffffffffffffffffff16635822213f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3657600080fd5b505afa158015610a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6e9190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff16639b3ba79f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ab957600080fd5b505afa158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af19190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff16632a0a8d5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190611436565b8152602001600081526020018673ffffffffffffffffffffffffffffffffffffffff1663e56e56db6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bc657600080fd5b505afa158015610bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfe9190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff16633e9e8d5f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4957600080fd5b505afa158015610c5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c819190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff1663db069a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610ccc57600080fd5b505afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d049190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff16634edd499b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d4f57600080fd5b505afa158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d879190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff1663853920406040518163ffffffff1660e01b815260040160206040518083038186803b158015610dd257600080fd5b505afa158015610de6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0a9190611436565b81526020018273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610e5557600080fd5b505afa158015610e69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8d9190611536565b60ff1681526020018673ffffffffffffffffffffffffffffffffffffffff1663f4b3b7d76040518163ffffffff1660e01b815260040160206040518083038186803b158015610edb57600080fd5b505afa158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f139190611436565b81526020018381526020018673ffffffffffffffffffffffffffffffffffffffff1663da5a9ded6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6457600080fd5b505afa158015610f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9c9190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1663a8aa1b316040518163ffffffff1660e01b815260040160206040518083038186803b15801561101f57600080fd5b505afa158015611033573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611057919061136f565b73ffffffffffffffffffffffffffffffffffffffff16815260200160405180608001604052806000815260200160008152602001600015158152602001600015158152508152509350505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051806102a001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016111ae6111b4565b81525090565b604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b6000813590506111ef81611d37565b92915050565b60008151905061120481611d37565b92915050565b60008151905061121981611d4e565b92915050565b60008151905061122e81611d65565b92915050565b60008151905061124381611d7c565b92915050565b60008135905061125881611d93565b92915050565b60006080828403121561127457611273611d1c565b5b61127e6080611a7e565b9050600061128e848285016112eb565b60008301525060206112a2848285016112eb565b60208301525060406112b68482850161120a565b60408301525060606112ca8482850161120a565b60608301525092915050565b6000813590506112e581611daa565b92915050565b6000815190506112fa81611daa565b92915050565b60008151905061130f81611dc1565b92915050565b60006020828403121561132b5761132a611d21565b5b6000611339848285016111f5565b91505092915050565b60006020828403121561135857611357611d21565b5b60006113668482850161121f565b91505092915050565b60006020828403121561138557611384611d21565b5b600061139384828501611234565b91505092915050565b6000602082840312156113b2576113b1611d21565b5b60006113c084828501611249565b91505092915050565b600080604083850312156113e0576113df611d21565b5b60006113ee85828601611249565b92505060206113ff858286016111e0565b9150509250929050565b60006080828403121561141f5761141e611d21565b5b600061142d8482850161125e565b91505092915050565b60006020828403121561144c5761144b611d21565b5b600061145a848285016112eb565b91505092915050565b6000806040838503121561147a57611479611d21565b5b6000611488858286016112d6565b9250506020611499858286016112d6565b9150509250929050565b600080604083850312156114ba576114b9611d21565b5b60006114c8858286016112eb565b92505060206114d9858286016112eb565b9150509250929050565b6000806000606084860312156114fc576114fb611d21565b5b600061150a868287016112d6565b935050602061151b868287016112d6565b925050604061152c868287016111e0565b9150509250925092565b60006020828403121561154c5761154b611d21565b5b600061155a84828501611300565b91505092915050565b600061156f8383611616565b6103008301905092915050565b61158581611b66565b82525050565b61159481611b66565b82525050565b60006115a582611ab3565b6115af8185611acb565b93506115ba83611aa3565b8060005b838110156115eb5781516115d28882611563565b97506115dd83611abe565b9250506001810190506115be565b5085935050505092915050565b61160181611b78565b82525050565b61161081611bf1565b82525050565b6103008201600082015161162d60008501826119d1565b50602082015161164060208501826119d1565b50604082015161165360408501826119d1565b50606082015161166660608501826119d1565b50608082015161167960808501826119d1565b5060a082015161168c60a08501826119d1565b5060c082015161169f60c08501826119d1565b5060e08201516116b260e08501826119d1565b506101008201516116c76101008501826119d1565b506101208201516116dc6101208501826119d1565b506101408201516116f16101408501826119d1565b506101608201516117066101608501826119d1565b5061018082015161171b6101808501826119d1565b506101a08201516117306101a08501826119d1565b506101c08201516117456101c08501826119d1565b506101e082015161175a6101e08501826119d1565b5061020082015161176f6102008501826119d1565b5061022082015161178461022085018261157c565b5061024082015161179961024085018261157c565b506102608201516117ae61026085018261157c565b506102808201516117c361028085018261197c565b50505050565b610300820160008201516117e060008501826119d1565b5060208201516117f360208501826119d1565b50604082015161180660408501826119d1565b50606082015161181960608501826119d1565b50608082015161182c60808501826119d1565b5060a082015161183f60a08501826119d1565b5060c082015161185260c08501826119d1565b5060e082015161186560e08501826119d1565b5061010082015161187a6101008501826119d1565b5061012082015161188f6101208501826119d1565b506101408201516118a46101408501826119d1565b506101608201516118b96101608501826119d1565b506101808201516118ce6101808501826119d1565b506101a08201516118e36101a08501826119d1565b506101c08201516118f86101c08501826119d1565b506101e082015161190d6101e08501826119d1565b506102008201516119226102008501826119d1565b5061022082015161193761022085018261157c565b5061024082015161194c61024085018261157c565b5061026082015161196161026085018261157c565b5061028082015161197661028085018261197c565b50505050565b60808201600082015161199260008501826119d1565b5060208201516119a560208501826119d1565b5060408201516119b860408501826115f8565b5060608201516119cb60608501826115f8565b50505050565b6119da81611bda565b82525050565b6119e981611bda565b82525050565b6000602082019050611a04600083018461158b565b92915050565b60006020820190508181036000830152611a24818461159a565b905092915050565b6000602082019050611a416000830184611607565b92915050565b600061030082019050611a5d60008301846117c9565b92915050565b6000602082019050611a7860008301846119e0565b92915050565b6000611a88611a99565b9050611a948282611c15565b919050565b6000604051905090565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000611ae782611bda565b9150611af283611bda565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b2757611b26611c8f565b5b828201905092915050565b6000611b3d82611bda565b9150611b4883611bda565b925082821015611b5b57611b5a611c8f565b5b828203905092915050565b6000611b7182611bba565b9050919050565b60008115159050919050565b6000611b8f82611b66565b9050919050565b6000611ba182611b66565b9050919050565b6000611bb382611b66565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611bfc82611c03565b9050919050565b6000611c0e82611bba565b9050919050565b611c1e82611d26565b810181811067ffffffffffffffff82111715611c3d57611c3c611ced565b5b80604052505050565b6000611c5182611bda565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c8457611c83611c8f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611d4081611b66565b8114611d4b57600080fd5b50565b611d5781611b78565b8114611d6257600080fd5b50565b611d6e81611b84565b8114611d7957600080fd5b50565b611d8581611b96565b8114611d9057600080fd5b50565b611d9c81611ba8565b8114611da757600080fd5b50565b611db381611bda565b8114611dbe57600080fd5b50565b611dca81611be4565b8114611dd557600080fd5b5056fea2646970667358221220d77ae11ac99ce458a7458d5bdfe528e98d42689f2abab6b582abf1576d1d0c7b64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063263ebc111461005c57806342ce61271461008c5780639ed6c9d6146100bc578063a0677aac146100ec578063f3fbd7d61461011c575b600080fd5b61007660048036038101906100719190611463565b61013a565b6040516100839190611a0a565b60405180910390f35b6100a660048036038101906100a191906114e3565b610393565b6040516100b39190611a0a565b60405180910390f35b6100d660048036038101906100d191906113c9565b6105ee565b6040516100e39190611a47565b60405180910390f35b6101066004803603810190610101919061139c565b6107c3565b6040516101139190611a47565b60405180910390f35b6101246110a8565b6040516101319190611a2c565b60405180910390f35b60608060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbaab6d96040518163ffffffff1660e01b815260040160206040518083038186803b1580156101a657600080fd5b505afa1580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de9190611436565b905080851015806101ef5750600084145b156101fe57819250505061038d565b600081858761020d9190611adc565b1161022357848661021e9190611adc565b610225565b815b905085816102339190611b32565b67ffffffffffffffff81111561024c5761024b611ced565b5b60405190808252806020026020018201604052801561028557816020015b6102726110cc565b81526020019060019003908161026a5790505b50925060008690505b818110156103855760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663831b000d836040518263ffffffff1660e01b81526004016102f29190611a63565b60206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190611315565b90506000819050610352816107c3565b86848151811061036557610364611cbe565b5b60200260200101819052505050808061037d90611c46565b91505061028e565b508293505050505b92915050565b60608060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbaab6d96040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ff57600080fd5b505afa158015610413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104379190611436565b905080861015806104485750600085145b156104575781925050506105e7565b60008186886104669190611adc565b1161047c5785876104779190611adc565b61047e565b815b9050868161048c9190611b32565b67ffffffffffffffff8111156104a5576104a4611ced565b5b6040519080825280602002602001820160405280156104de57816020015b6104cb6110cc565b8152602001906001900390816104c35790505b50925060008790505b818110156105df5760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663831b000d836040518263ffffffff1660e01b815260040161054b9190611a63565b60206040518083038186803b15801561056357600080fd5b505afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b9190611315565b905060008190506105ac81896105ee565b8684815181106105bf576105be611cbe565b5b6020026020010181905250505080806105d790611c46565b9150506104e7565b508293505050505b9392505050565b6105f66110cc565b6000610601846107c3565b90508373ffffffffffffffffffffffffffffffffffffffff166378912f53846040518263ffffffff1660e01b815260040161063c91906119ef565b60206040518083038186803b15801561065457600080fd5b505afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190611436565b8160600181815250508373ffffffffffffffffffffffffffffffffffffffff1663382db5b5846040518263ffffffff1660e01b81526004016106ce91906119ef565b60206040518083038186803b1580156106e657600080fd5b505afa1580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190611436565b8160e00181815250508373ffffffffffffffffffffffffffffffffffffffff16636386c1c7846040518263ffffffff1660e01b815260040161076091906119ef565b60806040518083038186803b15801561077857600080fd5b505afa15801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b09190611409565b8161028001819052508091505092915050565b6107cb6110cc565b6000808373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401604080518083038186803b15801561081357600080fd5b505afa158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b91906114a3565b9150915060008473ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561089757600080fd5b505afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf9190611342565b9050604051806102a001604052808673ffffffffffffffffffffffffffffffffffffffff16634f245ef76040518163ffffffff1660e01b815260040160206040518083038186803b15801561092357600080fd5b505afa158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b9190611436565b81526020018481526020018673ffffffffffffffffffffffffffffffffffffffff16639363c8126040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ac57600080fd5b505afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e49190611436565b8152602001600081526020018673ffffffffffffffffffffffffffffffffffffffff16635822213f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3657600080fd5b505afa158015610a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6e9190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff16639b3ba79f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ab957600080fd5b505afa158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af19190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff16632a0a8d5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190611436565b8152602001600081526020018673ffffffffffffffffffffffffffffffffffffffff1663e56e56db6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bc657600080fd5b505afa158015610bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfe9190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff16633e9e8d5f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4957600080fd5b505afa158015610c5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c819190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff1663db069a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610ccc57600080fd5b505afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d049190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff16634edd499b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d4f57600080fd5b505afa158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d879190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff1663853920406040518163ffffffff1660e01b815260040160206040518083038186803b158015610dd257600080fd5b505afa158015610de6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0a9190611436565b81526020018273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610e5557600080fd5b505afa158015610e69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8d9190611536565b60ff1681526020018673ffffffffffffffffffffffffffffffffffffffff1663f4b3b7d76040518163ffffffff1660e01b815260040160206040518083038186803b158015610edb57600080fd5b505afa158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f139190611436565b81526020018381526020018673ffffffffffffffffffffffffffffffffffffffff1663da5a9ded6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6457600080fd5b505afa158015610f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9c9190611436565b81526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1663a8aa1b316040518163ffffffff1660e01b815260040160206040518083038186803b15801561101f57600080fd5b505afa158015611033573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611057919061136f565b73ffffffffffffffffffffffffffffffffffffffff16815260200160405180608001604052806000815260200160008152602001600015158152602001600015158152508152509350505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051806102a001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016111ae6111b4565b81525090565b604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b6000813590506111ef81611d37565b92915050565b60008151905061120481611d37565b92915050565b60008151905061121981611d4e565b92915050565b60008151905061122e81611d65565b92915050565b60008151905061124381611d7c565b92915050565b60008135905061125881611d93565b92915050565b60006080828403121561127457611273611d1c565b5b61127e6080611a7e565b9050600061128e848285016112eb565b60008301525060206112a2848285016112eb565b60208301525060406112b68482850161120a565b60408301525060606112ca8482850161120a565b60608301525092915050565b6000813590506112e581611daa565b92915050565b6000815190506112fa81611daa565b92915050565b60008151905061130f81611dc1565b92915050565b60006020828403121561132b5761132a611d21565b5b6000611339848285016111f5565b91505092915050565b60006020828403121561135857611357611d21565b5b60006113668482850161121f565b91505092915050565b60006020828403121561138557611384611d21565b5b600061139384828501611234565b91505092915050565b6000602082840312156113b2576113b1611d21565b5b60006113c084828501611249565b91505092915050565b600080604083850312156113e0576113df611d21565b5b60006113ee85828601611249565b92505060206113ff858286016111e0565b9150509250929050565b60006080828403121561141f5761141e611d21565b5b600061142d8482850161125e565b91505092915050565b60006020828403121561144c5761144b611d21565b5b600061145a848285016112eb565b91505092915050565b6000806040838503121561147a57611479611d21565b5b6000611488858286016112d6565b9250506020611499858286016112d6565b9150509250929050565b600080604083850312156114ba576114b9611d21565b5b60006114c8858286016112eb565b92505060206114d9858286016112eb565b9150509250929050565b6000806000606084860312156114fc576114fb611d21565b5b600061150a868287016112d6565b935050602061151b868287016112d6565b925050604061152c868287016111e0565b9150509250925092565b60006020828403121561154c5761154b611d21565b5b600061155a84828501611300565b91505092915050565b600061156f8383611616565b6103008301905092915050565b61158581611b66565b82525050565b61159481611b66565b82525050565b60006115a582611ab3565b6115af8185611acb565b93506115ba83611aa3565b8060005b838110156115eb5781516115d28882611563565b97506115dd83611abe565b9250506001810190506115be565b5085935050505092915050565b61160181611b78565b82525050565b61161081611bf1565b82525050565b6103008201600082015161162d60008501826119d1565b50602082015161164060208501826119d1565b50604082015161165360408501826119d1565b50606082015161166660608501826119d1565b50608082015161167960808501826119d1565b5060a082015161168c60a08501826119d1565b5060c082015161169f60c08501826119d1565b5060e08201516116b260e08501826119d1565b506101008201516116c76101008501826119d1565b506101208201516116dc6101208501826119d1565b506101408201516116f16101408501826119d1565b506101608201516117066101608501826119d1565b5061018082015161171b6101808501826119d1565b506101a08201516117306101a08501826119d1565b506101c08201516117456101c08501826119d1565b506101e082015161175a6101e08501826119d1565b5061020082015161176f6102008501826119d1565b5061022082015161178461022085018261157c565b5061024082015161179961024085018261157c565b506102608201516117ae61026085018261157c565b506102808201516117c361028085018261197c565b50505050565b610300820160008201516117e060008501826119d1565b5060208201516117f360208501826119d1565b50604082015161180660408501826119d1565b50606082015161181960608501826119d1565b50608082015161182c60808501826119d1565b5060a082015161183f60a08501826119d1565b5060c082015161185260c08501826119d1565b5060e082015161186560e08501826119d1565b5061010082015161187a6101008501826119d1565b5061012082015161188f6101208501826119d1565b506101408201516118a46101408501826119d1565b506101608201516118b96101608501826119d1565b506101808201516118ce6101808501826119d1565b506101a08201516118e36101a08501826119d1565b506101c08201516118f86101c08501826119d1565b506101e082015161190d6101e08501826119d1565b506102008201516119226102008501826119d1565b5061022082015161193761022085018261157c565b5061024082015161194c61024085018261157c565b5061026082015161196161026085018261157c565b5061028082015161197661028085018261197c565b50505050565b60808201600082015161199260008501826119d1565b5060208201516119a560208501826119d1565b5060408201516119b860408501826115f8565b5060608201516119cb60608501826115f8565b50505050565b6119da81611bda565b82525050565b6119e981611bda565b82525050565b6000602082019050611a04600083018461158b565b92915050565b60006020820190508181036000830152611a24818461159a565b905092915050565b6000602082019050611a416000830184611607565b92915050565b600061030082019050611a5d60008301846117c9565b92915050565b6000602082019050611a7860008301846119e0565b92915050565b6000611a88611a99565b9050611a948282611c15565b919050565b6000604051905090565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000611ae782611bda565b9150611af283611bda565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b2757611b26611c8f565b5b828201905092915050565b6000611b3d82611bda565b9150611b4883611bda565b925082821015611b5b57611b5a611c8f565b5b828203905092915050565b6000611b7182611bba565b9050919050565b60008115159050919050565b6000611b8f82611b66565b9050919050565b6000611ba182611b66565b9050919050565b6000611bb382611b66565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611bfc82611c03565b9050919050565b6000611c0e82611bba565b9050919050565b611c1e82611d26565b810181811067ffffffffffffffff82111715611c3d57611c3c611ced565b5b80604052505050565b6000611c5182611bda565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c8457611c83611c8f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611d4081611b66565b8114611d4b57600080fd5b50565b611d5781611b78565b8114611d6257600080fd5b50565b611d6e81611b84565b8114611d7957600080fd5b50565b611d8581611b96565b8114611d9057600080fd5b50565b611d9c81611ba8565b8114611da757600080fd5b50565b611db381611bda565b8114611dbe57600080fd5b50565b611dca81611be4565b8114611dd557600080fd5b5056fea2646970667358221220d77ae11ac99ce458a7458d5bdfe528e98d42689f2abab6b582abf1576d1d0c7b64736f6c63430008060033",
  "devdoc": {
    "author": "Trader Joe",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_rocketJoeFactory": "Address of the RocketJoeFactory"
        }
      },
      "getAllLaunchEvents(uint256,uint256)": {
        "params": {
          "_limit": "Maximum number of launch event datas to return",
          "_offset": "Index to start at when looking up launch events"
        },
        "returns": {
          "_0": "Array of all launch event datas"
        }
      },
      "getAllLaunchEventsWithUser(uint256,uint256,address)": {
        "params": {
          "_limit": "Maximum number of launch event datas to return",
          "_offset": "Index to start at when looking up launch events",
          "_user": "User to lookup"
        },
        "returns": {
          "_0": "Array of all launch event datas with user info"
        }
      },
      "getLaunchEventData(address)": {
        "params": {
          "_launchEvent": "Launch event to lookup"
        },
        "returns": {
          "_0": "Launch event data for the given `_launchEvent`"
        }
      },
      "getUserLaunchEventData(address,address)": {
        "params": {
          "_launchEvent": "Launch event to lookup",
          "_user": "User to look up"
        },
        "returns": {
          "_0": "Launch event data for the given `_launchEvent` and `_user`"
        }
      }
    },
    "title": "Launch Event Lens",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Create a new instance with required parameters"
      },
      "getAllLaunchEvents(uint256,uint256)": {
        "notice": "Get all launch event datas"
      },
      "getAllLaunchEventsWithUser(uint256,uint256,address)": {
        "notice": "Get all launch event datas with a given `_user`"
      },
      "getLaunchEventData(address)": {
        "notice": "Get launch event data for a given launch event"
      },
      "getUserLaunchEventData(address,address)": {
        "notice": "Get launch event data for a given launch event and user"
      }
    },
    "notice": "Helper contract to fetch launch event data",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3964,
        "contract": "contracts/LaunchEventLens.sol:LaunchEventLens",
        "label": "rocketJoeFactory",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IRocketJoeFactory)6644"
      }
    ],
    "types": {
      "t_contract(IRocketJoeFactory)6644": {
        "encoding": "inplace",
        "label": "contract IRocketJoeFactory",
        "numberOfBytes": "20"
      }
    }
  }
}
