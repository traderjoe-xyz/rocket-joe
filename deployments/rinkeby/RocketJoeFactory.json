{
  "address": "0x1648fEb271F289D83622B90aD8d88217ac6D89d9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventImplementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rJoe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wavax",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_penaltyCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IssuingTokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseOneStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseTwoStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseThreeStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rJoe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "RJLaunchEventCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "SetFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collector",
          "type": "address"
        }
      ],
      "name": "SetPenaltyCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SetRJoe",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "SetRJoePerAvax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PHASE_ONE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PHASE_ONE_NO_FEE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PHASE_TWO_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allRJLaunchEvents",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_phaseOneStartTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenIncentivesPercent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_floorPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxWithdrawPenalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fixedWithdrawPenalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAllocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userTimelock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_issuerTimelock",
          "type": "uint256"
        }
      ],
      "name": "createRJLaunchEvent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getRJLaunchEvent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRJLaunchEvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numLaunchEvents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penaltyCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rJoe",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rJoePerAvax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_penaltyCollector",
          "type": "address"
        }
      ],
      "name": "setPenaltyCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_phaseNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setPhaseDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_noFeeDuration",
          "type": "uint256"
        }
      ],
      "name": "setPhaseOneNoFeeDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rJoe",
          "type": "address"
        }
      ],
      "name": "setRJoe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "setRJoePerAvax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wavax",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x10dca084a58f4ec00b65685f5115a294da695fff0cf0bb0cf0c307b4ff0d6b0d",
  "receipt": {
    "to": null,
    "from": "0x1d9D82344E76769EB727521822D1EacB834A9024",
    "contractAddress": "0x1648fEb271F289D83622B90aD8d88217ac6D89d9",
    "transactionIndex": 3,
    "gasUsed": "2644111",
    "logsBloom": "0x
    "blockHash": "0x9344ec375af4642df66bdddb9916c388c50d493b6f3363f7aa5045cf0ae850aa",
    "transactionHash": "0x10dca084a58f4ec00b65685f5115a294da695fff0cf0bb0cf0c307b4ff0d6b0d",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 10059791,
        "transactionHash": "0x10dca084a58f4ec00b65685f5115a294da695fff0cf0bb0cf0c307b4ff0d6b0d",
        "address": "0x1648fEb271F289D83622B90aD8d88217ac6D89d9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001d9d82344e76769eb727521822d1eacb834a9024"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x9344ec375af4642df66bdddb9916c388c50d493b6f3363f7aa5045cf0ae850aa"
      }
    ],
    "blockNumber": 10059791,
    "cumulativeGasUsed": "2896942",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9b1a7A7E2Cd271760b5FcA311EbCa64975E4C6cd",
    "0x4320f32Cc3319554CC638349f56FA9c911035cE5",
    "0xc778417E063141139Fce010982780140Aa0cD5Ab",
    "0x1d9D82344E76769EB727521822D1EacB834A9024",
    "0x7E2528476b14507f003aE9D123334977F5Ad7B14",
    "0x86f83be9770894d8e46301b12E88e14AdC6cdb5F"
  ],
  "numDeployments": 3,
  "solcInputHash": "7261b3736d8f60e5be4201443b64a05d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rJoe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wavax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_penaltyCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IssuingTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseOneStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseTwoStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseThreeStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rJoe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"RJLaunchEventCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"SetFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"}],\"name\":\"SetPenaltyCollector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SetRJoe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"SetRJoePerAvax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PHASE_ONE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PHASE_ONE_NO_FEE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PHASE_TWO_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRJLaunchEvents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_phaseOneStartTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenIncentivesPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_floorPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fixedWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_issuerTimelock\",\"type\":\"uint256\"}],\"name\":\"createRJLaunchEvent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRJLaunchEvent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRJLaunchEvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numLaunchEvents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rJoe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rJoePerAvax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_penaltyCollector\",\"type\":\"address\"}],\"name\":\"setPenaltyCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_phaseNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setPhaseDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_noFeeDuration\",\"type\":\"uint256\"}],\"name\":\"setPhaseOneNoFeeDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rJoe\",\"type\":\"address\"}],\"name\":\"setRJoe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"setRJoePerAvax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wavax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Uses clone factory pattern to save space\",\"params\":{\"_eventImplementation\":\"Implementation of launch event contract\",\"_factory\":\"Factory used to get info of JoePairs\",\"_penaltyCollector\":\"Address that collects all withdrawal penalties\",\"_rJoe\":\"rJOE token address\",\"_router\":\"Router used to create LP on Trader Joe AMM\",\"_wavax\":\"WAVAX token address\"}},\"createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_fixedWithdrawPenalty\":\"Withdrawal penalty during phase 2\",\"_floorPrice\":\"Price of each token in AVAX, scaled to 1e18\",\"_issuer\":\"Address of the project issuing tokens for auction\",\"_issuerTimelock\":\"Amount of time issuer's LP will be locked for during phase 3\",\"_maxAllocation\":\"Maximum number of AVAX each participant can commit\",\"_maxWithdrawPenalty\":\"Maximum withdrawal penalty that can be met during phase 1\",\"_phaseOneStartTime\":\"Timestamp of when launch event will start\",\"_token\":\"Token that will be issued through this launch event\",\"_tokenAmount\":\"Amount of tokens that will be issued\",\"_tokenIncentivesPercent\":\"Additional tokens that will be given as incentive for locking up LPs during phase 3 expressed as a percentage of the issuing tokens for sale, scaled to 1e18\",\"_userTimelock\":\"Amount of time users' LPs will be locked for during phase 3\"},\"returns\":{\"_0\":\"Address of launch event contract\"}},\"numLaunchEvents()\":{\"returns\":{\"_0\":\"The number of launch events ever created\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFactory(address)\":{\"params\":{\"_factory\":\"New factory address\"}},\"setPenaltyCollector(address)\":{\"params\":{\"_penaltyCollector\":\"New penalty collector address\"}},\"setPhaseDuration(uint256,uint256)\":{\"params\":{\"_duration\":\"Duration of phase in seconds\",\"_phaseNumber\":\"Can be only 1 or 2\"}},\"setPhaseOneNoFeeDuration(uint256)\":{\"params\":{\"_noFeeDuration\":\"Duration of no fee phase\"}},\"setRJoe(address)\":{\"params\":{\"_rJoe\":\"New rJOE address\"}},\"setRJoePerAvax(uint256)\":{\"details\":\"Configured by team between launch events to control inflation\"},\"setRouter(address)\":{\"params\":{\"_router\":\"New router address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Rocket Joe Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates the launch event factory\"},\"createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Creates a launch event contract\"},\"numLaunchEvents()\":{\"notice\":\"Returns the number of launch events\"},\"setFactory(address)\":{\"notice\":\"Set JoeFactory address\"},\"setPenaltyCollector(address)\":{\"notice\":\"Set address to collect withdrawal penalties\"},\"setPhaseDuration(uint256,uint256)\":{\"notice\":\"Set duration of each of the three phases\"},\"setPhaseOneNoFeeDuration(uint256)\":{\"notice\":\"Set the no fee duration of phase 1\"},\"setRJoe(address)\":{\"notice\":\"Set rJOE address\"},\"setRJoePerAvax(uint256)\":{\"notice\":\"Set amount of rJOE required to deposit 1 AVAX into launch event\"},\"setRouter(address)\":{\"notice\":\"Set JoeRouter address\"}},\"notice\":\"Factory that creates Rocket Joe events\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RocketJoeFactory.sol\":\"RocketJoeFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x1cc0efb01cbf008b768fd7b334786a6e358809198bb7e67f1c530af4957c6a21\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/RocketJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IRocketJoeFactory.sol\\\";\\nimport \\\"./interfaces/IJoeFactory.sol\\\";\\nimport \\\"./interfaces/IJoePair.sol\\\";\\nimport \\\"./interfaces/ILaunchEvent.sol\\\";\\nimport \\\"./interfaces/IRocketJoeToken.sol\\\";\\n\\n/// @title Rocket Joe Factory\\n/// @author Trader Joe\\n/// @notice Factory that creates Rocket Joe events\\ncontract RocketJoeFactory is IRocketJoeFactory, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    address public override penaltyCollector;\\n    address public override eventImplementation;\\n\\n    address public override rJoe;\\n    uint256 public override rJoePerAvax;\\n    address public override wavax;\\n    address public override router;\\n    address public override factory;\\n\\n    uint256 public override PHASE_ONE_DURATION = 2 days;\\n    uint256 public override PHASE_ONE_NO_FEE_DURATION = 1 days;\\n    uint256 public override PHASE_TWO_DURATION = 1 days;\\n\\n    mapping(address => address) public override getRJLaunchEvent;\\n    mapping(address => bool) public override isRJLaunchEvent;\\n    address[] public override allRJLaunchEvents;\\n\\n    /// @notice Creates the launch event factory\\n    /// @dev Uses clone factory pattern to save space\\n    /// @param _eventImplementation Implementation of launch event contract\\n    /// @param _rJoe rJOE token address\\n    /// @param _wavax WAVAX token address\\n    /// @param _penaltyCollector Address that collects all withdrawal penalties\\n    /// @param _router Router used to create LP on Trader Joe AMM\\n    /// @param _factory Factory used to get info of JoePairs\\n    constructor(\\n        address _eventImplementation,\\n        address _rJoe,\\n        address _wavax,\\n        address _penaltyCollector,\\n        address _router,\\n        address _factory\\n    ) {\\n        require(\\n            _eventImplementation != address(0) &&\\n                _rJoe != address(0) &&\\n                _wavax != address(0) &&\\n                _penaltyCollector != address(0) &&\\n                _router != address(0) &&\\n                _factory != address(0),\\n            \\\"RJFactory: Addresses can't be null address\\\"\\n        );\\n        IRocketJoeToken(_rJoe).initialize();\\n\\n        eventImplementation = _eventImplementation;\\n        rJoe = _rJoe;\\n\\n        wavax = _wavax;\\n        penaltyCollector = _penaltyCollector;\\n        router = _router;\\n        factory = _factory;\\n        rJoePerAvax = 100;\\n    }\\n\\n    /// @notice Returns the number of launch events\\n    /// @return The number of launch events ever created\\n    function numLaunchEvents() external view override returns (uint256) {\\n        return allRJLaunchEvents.length;\\n    }\\n\\n    /// @notice Creates a launch event contract\\n    /// @param _issuer Address of the project issuing tokens for auction\\n    /// @param _phaseOneStartTime Timestamp of when launch event will start\\n    /// @param _token Token that will be issued through this launch event\\n    /// @param _tokenAmount Amount of tokens that will be issued\\n    /// @param _tokenIncentivesPercent Additional tokens that will be given as\\n    /// incentive for locking up LPs during phase 3 expressed as a percentage\\n    /// of the issuing tokens for sale, scaled to 1e18\\n    /// @param _floorPrice Price of each token in AVAX, scaled to 1e18\\n    /// @param _maxWithdrawPenalty Maximum withdrawal penalty that can be met\\n    /// during phase 1\\n    /// @param _fixedWithdrawPenalty Withdrawal penalty during phase 2\\n    /// @param _maxAllocation Maximum number of AVAX each participant can commit\\n    /// @param _userTimelock Amount of time users' LPs will be locked for\\n    /// during phase 3\\n    /// @param _issuerTimelock Amount of time issuer's LP will be locked for\\n    /// during phase 3\\n    /// @return Address of launch event contract\\n    function createRJLaunchEvent(\\n        address _issuer,\\n        uint256 _phaseOneStartTime,\\n        address _token,\\n        uint256 _tokenAmount,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external override returns (address) {\\n        require(\\n            getRJLaunchEvent[_token] == address(0),\\n            \\\"RJFactory: token has already been issued\\\"\\n        );\\n        require(_issuer != address(0), \\\"RJFactory: issuer can't be 0 address\\\");\\n        require(_token != address(0), \\\"RJFactory: token can't be 0 address\\\");\\n        require(_token != wavax, \\\"RJFactory: token can't be wavax\\\");\\n        require(\\n            _tokenAmount > 0,\\n            \\\"RJFactory: token amount needs to be greater than 0\\\"\\n        );\\n        require(\\n            IJoeFactory(factory).getPair(_token, wavax) == address(0) ||\\n                IJoePair(IJoeFactory(factory).getPair(_token, wavax))\\n                    .totalSupply() ==\\n                0,\\n            \\\"RJFactory: liquid pair already exists\\\"\\n        );\\n\\n        address launchEvent = Clones.clone(eventImplementation);\\n\\n        // msg.sender needs to approve RocketJoeFactory\\n        IERC20(_token).safeTransferFrom(msg.sender, launchEvent, _tokenAmount);\\n\\n        emit IssuingTokenDeposited(_token, _tokenAmount);\\n\\n        ILaunchEvent(payable(launchEvent)).initialize(\\n            _issuer,\\n            _phaseOneStartTime,\\n            _token,\\n            _tokenIncentivesPercent,\\n            _floorPrice,\\n            _maxWithdrawPenalty,\\n            _fixedWithdrawPenalty,\\n            _maxAllocation,\\n            _userTimelock,\\n            _issuerTimelock\\n        );\\n\\n        getRJLaunchEvent[_token] = launchEvent;\\n        isRJLaunchEvent[launchEvent] = true;\\n        allRJLaunchEvents.push(launchEvent);\\n\\n        _emitLaunchedEvent(_issuer, _token, _phaseOneStartTime);\\n\\n        return launchEvent;\\n    }\\n\\n    /// @notice Set rJOE address\\n    /// @param _rJoe New rJOE address\\n    function setRJoe(address _rJoe) external override onlyOwner {\\n        IRocketJoeToken(_rJoe).initialize();\\n        rJoe = _rJoe;\\n        emit SetRJoe(_rJoe);\\n    }\\n\\n    /// @notice Set address to collect withdrawal penalties\\n    /// @param _penaltyCollector New penalty collector address\\n    function setPenaltyCollector(address _penaltyCollector)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        penaltyCollector = _penaltyCollector;\\n        emit SetPenaltyCollector(_penaltyCollector);\\n    }\\n\\n    /// @notice Set JoeRouter address\\n    /// @param _router New router address\\n    function setRouter(address _router) external override onlyOwner {\\n        router = _router;\\n        emit SetRouter(_router);\\n    }\\n\\n    /// @notice Set JoeFactory address\\n    /// @param _factory New factory address\\n    function setFactory(address _factory) external override onlyOwner {\\n        factory = _factory;\\n        emit SetFactory(_factory);\\n    }\\n\\n    /// @notice Set amount of rJOE required to deposit 1 AVAX into launch event\\n    /// @dev Configured by team between launch events to control inflation\\n    function setRJoePerAvax(uint256 _rJoePerAvax) external override onlyOwner {\\n        rJoePerAvax = _rJoePerAvax;\\n        emit SetRJoePerAvax(_rJoePerAvax);\\n    }\\n\\n    /// @notice Set duration of each of the three phases\\n    /// @param _phaseNumber Can be only 1 or 2\\n    /// @param _duration Duration of phase in seconds\\n    function setPhaseDuration(uint256 _phaseNumber, uint256 _duration)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        if (_phaseNumber == 1) {\\n            require(\\n                _duration > PHASE_ONE_NO_FEE_DURATION,\\n                \\\"RJFactory: phase one duration lower than no fee duration\\\"\\n            );\\n            PHASE_ONE_DURATION = _duration;\\n        } else if (_phaseNumber == 2) {\\n            PHASE_TWO_DURATION = _duration;\\n        }\\n    }\\n\\n    /// @notice Set the no fee duration of phase 1\\n    /// @param _noFeeDuration Duration of no fee phase\\n    function setPhaseOneNoFeeDuration(uint256 _noFeeDuration)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        require(\\n            _noFeeDuration < PHASE_ONE_DURATION,\\n            \\\"RJFactory: no fee duration bigger than phase one duration\\\"\\n        );\\n        PHASE_ONE_NO_FEE_DURATION = _noFeeDuration;\\n    }\\n\\n    /// @dev This function emits an event after a new launch event has been created\\n    /// It is only seperated out due to `createRJLaunchEvent` having too many local variables\\n    function _emitLaunchedEvent(\\n        address _issuer,\\n        address _token,\\n        uint256 _phaseOneStartTime\\n    ) internal {\\n        uint256 _phaseTwoStartTime = _phaseOneStartTime + PHASE_ONE_DURATION;\\n        uint256 _phaseThreeStartTime = _phaseTwoStartTime + PHASE_TWO_DURATION;\\n\\n        emit RJLaunchEventCreated(\\n            _issuer,\\n            _token,\\n            _phaseOneStartTime,\\n            _phaseTwoStartTime,\\n            _phaseThreeStartTime,\\n            rJoe,\\n            rJoePerAvax\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xff37cfa38c815574b7061b13f4d45ab94ba14a1b1df7ec371a99b7676e7e0879\",\"license\":\"MIT\"},\"contracts/interfaces/IJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.8.0;\\n\\ninterface IJoeFactory {\\n    event PairCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        address pair,\\n        uint256\\n    );\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function migrator() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB)\\n        external\\n        view\\n        returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB)\\n        external\\n        returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n\\n    function setMigrator(address) external;\\n}\\n\",\"keccak256\":\"0xf5b7800d5a67418d3b435f7daa2ab0783c307bab1d603c8b7fb6f5da9055982f\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IJoePair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.8.0;\\n\\ninterface IJoePair {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external pure returns (string memory);\\n\\n    function symbol() external pure returns (string memory);\\n\\n    function decimals() external pure returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n    event Burn(\\n        address indexed sender,\\n        uint256 amount0,\\n        uint256 amount1,\\n        address indexed to\\n    );\\n    event Swap(\\n        address indexed sender,\\n        uint256 amount0In,\\n        uint256 amount1In,\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function price0CumulativeLast() external view returns (uint256);\\n\\n    function price1CumulativeLast() external view returns (uint256);\\n\\n    function kLast() external view returns (uint256);\\n\\n    function mint(address to) external returns (uint256 liquidity);\\n\\n    function burn(address to)\\n        external\\n        returns (uint256 amount0, uint256 amount1);\\n\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n\\n    function skim(address to) external;\\n\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x04c20e91f949852d3b8d6387443abc7816e8bd851de53676ab0fe948699fb63e\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ILaunchEvent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nimport \\\"./IJoePair.sol\\\";\\n\\ninterface ILaunchEvent {\\n    struct UserInfo {\\n        uint256 allocation;\\n        uint256 balance;\\n        bool hasWithdrawnPair;\\n        bool hasWithdrawnIncentives;\\n    }\\n\\n    function initialize(\\n        address _issuer,\\n        uint256 _phaseOne,\\n        address _token,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external;\\n\\n    function auctionStart() external view returns (uint256);\\n\\n    function PHASE_ONE_DURATION() external view returns (uint256);\\n\\n    function PHASE_ONE_NO_FEE_DURATION() external view returns (uint256);\\n\\n    function PHASE_TWO_DURATION() external view returns (uint256);\\n\\n    function tokenIncentivesPercent() external view returns (uint256);\\n\\n    function floorPrice() external view returns (uint256);\\n\\n    function userTimelock() external view returns (uint256);\\n\\n    function issuerTimelock() external view returns (uint256);\\n\\n    function maxWithdrawPenalty() external view returns (uint256);\\n\\n    function fixedWithdrawPenalty() external view returns (uint256);\\n\\n    function rJoePerAvax() external view returns (uint256);\\n\\n    function getReserves() external view returns (uint256, uint256);\\n\\n    function token() external view returns (IERC20Metadata);\\n\\n    function pair() external view returns (IJoePair);\\n\\n    function getUserInfo(address) external view returns (UserInfo memory);\\n}\\n\",\"keccak256\":\"0x88816221b4b35970191eeaa8fc869e71f772047c75f003c9c73816b2bb6f2b0e\",\"license\":\"MIT\"},\"contracts/interfaces/IRocketJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRocketJoeFactory {\\n    event RJLaunchEventCreated(\\n        address indexed issuer,\\n        address indexed token,\\n        uint256 phaseOneStartTime,\\n        uint256 phaseTwoStartTime,\\n        uint256 phaseThreeStartTime,\\n        address rJoe,\\n        uint256 rJoePerAvax\\n    );\\n    event SetRJoe(address indexed token);\\n    event SetPenaltyCollector(address indexed collector);\\n    event SetRouter(address indexed router);\\n    event SetFactory(address indexed factory);\\n    event SetRJoePerAvax(uint256 rJoePerAvax);\\n    event IssuingTokenDeposited(address indexed token, uint256 amount);\\n\\n    function eventImplementation() external view returns (address);\\n\\n    function penaltyCollector() external view returns (address);\\n\\n    function wavax() external view returns (address);\\n\\n    function rJoePerAvax() external view returns (uint256);\\n\\n    function router() external view returns (address);\\n\\n    function factory() external view returns (address);\\n\\n    function rJoe() external view returns (address);\\n\\n    function PHASE_ONE_DURATION() external view returns (uint256);\\n\\n    function PHASE_ONE_NO_FEE_DURATION() external view returns (uint256);\\n\\n    function PHASE_TWO_DURATION() external view returns (uint256);\\n\\n    function getRJLaunchEvent(address token)\\n        external\\n        view\\n        returns (address launchEvent);\\n\\n    function isRJLaunchEvent(address token) external view returns (bool);\\n\\n    function allRJLaunchEvents(uint256) external view returns (address pair);\\n\\n    function numLaunchEvents() external view returns (uint256);\\n\\n    function createRJLaunchEvent(\\n        address _issuer,\\n        uint256 _phaseOneStartTime,\\n        address _token,\\n        uint256 _tokenAmount,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external returns (address pair);\\n\\n    function setPenaltyCollector(address) external;\\n\\n    function setRouter(address) external;\\n\\n    function setFactory(address) external;\\n\\n    function setRJoe(address) external;\\n\\n    function setRJoePerAvax(uint256) external;\\n\\n    function setPhaseDuration(uint256, uint256) external;\\n\\n    function setPhaseOneNoFeeDuration(uint256) external;\\n}\\n\",\"keccak256\":\"0xf153d963836426f3363f8cf63a1996345ec19833dac947841910cc871899a8c9\",\"license\":\"MIT\"},\"contracts/interfaces/IRocketJoeToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IRocketJoeToken {\\n    /**\\n     * @dev Initialize variables.\\n     *\\n     * Needs to be called by RocketJoeFactory.\\n     */\\n    function initialize() external;\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `from`.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burnFrom(address from, uint256 amount) external;\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xb01d397a64cd49b491a7c0f3366e548095e5e1dff6267f6bc7fb94c76385c36e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c8063831b000d116100de578063c571287e11610097578063ee0ce4b311610071578063ee0ce4b314610416578063f2fde38b14610432578063f887ea401461044e578063fbaab6d91461046c57610173565b8063c571287e146103aa578063cd8425be146103da578063db069a51146103f857610173565b8063831b000d146102e8578063853920401461031857806386832abc146103365780638da5cb5b14610352578063c0d7865514610370578063c45a01551461038c57610173565b80634edd499b116101305780634edd499b1461023c5780635354e3b71461025a5780635b7d8f051461028a5780635bb47808146102a6578063715018a6146102c25780637f3d8f4f146102cc57610173565b8063117be4c214610178578063145b026714610196578063308097b2146101b457806333b232a9146101d25780633e9e8d5f146102025780634ccb51d014610220575b600080fd5b61018061048a565b60405161018d91906120a9565b60405180910390f35b61019e6104b0565b6040516101ab91906120a9565b60405180910390f35b6101bc6104d6565b6040516101c991906120a9565b60405180910390f35b6101ec60048036038101906101e79190611bfc565b6104fc565b6040516101f991906121c0565b60405180910390f35b61020a61051c565b60405161021791906123bd565b60405180910390f35b61023a60048036038101906102359190611d77565b610522565b005b6102446105df565b60405161025191906123bd565b60405180910390f35b610274600480360381019061026f9190611c56565b6105e5565b60405161028191906120a9565b60405180910390f35b6102a4600480360381019061029f9190611bfc565b610d79565b005b6102c060048036038101906102bb9190611bfc565b610e7c565b005b6102ca610f7f565b005b6102e660048036038101906102e19190611bfc565b611007565b005b61030260048036038101906102fd9190611d77565b61116a565b60405161030f91906120a9565b60405180910390f35b6103206111a9565b60405161032d91906123bd565b60405180910390f35b610350600480360381019061034b9190611d77565b6111af565b005b61035a611279565b60405161036791906120a9565b60405180910390f35b61038a60048036038101906103859190611bfc565b6112a2565b005b6103946113a5565b6040516103a191906120a9565b60405180910390f35b6103c460048036038101906103bf9190611bfc565b6113cb565b6040516103d191906120a9565b60405180910390f35b6103e26113fe565b6040516103ef91906120a9565b60405180910390f35b610400611424565b60405161040d91906123bd565b60405180910390f35b610430600480360381019061042b9190611dd1565b61142a565b005b61044c60048036038101906104479190611bfc565b611515565b005b61045661160d565b60405161046391906120a9565b60405180910390f35b610474611633565b60405161048191906123bd565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c6020528060005260406000206000915054906101000a900460ff1681565b60085481565b61052a611640565b73ffffffffffffffffffffffffffffffffffffffff16610548611279565b73ffffffffffffffffffffffffffffffffffffffff161461059e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610595906122dd565b60405180910390fd5b806004819055507fd09367aecf1c1393b768cca7f6d789b6557ea9bf86dd59661861d1a98d940397816040516105d491906123bd565b60405180910390a150565b600a5481565b60008073ffffffffffffffffffffffffffffffffffffffff16600b60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab9061233d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161415610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b906122bd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b9061237d565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081c9061225d565b60405180910390fd5b60008911610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f9061223d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a439058c600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016108ff9291906120c4565b60206040518083038186803b15801561091757600080fd5b505afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f9190611c29565b73ffffffffffffffffffffffffffffffffffffffff161480610abc57506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a439058c600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016109ed9291906120c4565b60206040518083038186803b158015610a0557600080fd5b505afa158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d9190611c29565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aba9190611da4565b145b610afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af2906122fd565b60405180910390fd5b6000610b28600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611648565b9050610b5733828c8e73ffffffffffffffffffffffffffffffffffffffff1661171d909392919063ffffffff16565b8a73ffffffffffffffffffffffffffffffffffffffff167f5fe5f96b8b4af2407f13a18fd2590ee8e2cad65cd018333e10e6f11b110301758b604051610b9d91906123bd565b60405180910390a28073ffffffffffffffffffffffffffffffffffffffff166302ee594b8e8e8e8d8d8d8d8d8d8d6040518b63ffffffff1660e01b8152600401610bf09a99989796959493929190612124565b600060405180830381600087803b158015610c0a57600080fd5b505af1158015610c1e573d6000803e3d6000fd5b5050505080600b60008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600d819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d668d8c8e6117a6565b809150509b9a5050505050505050505050565b610d81611640565b73ffffffffffffffffffffffffffffffffffffffff16610d9f611279565b73ffffffffffffffffffffffffffffffffffffffff1614610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dec906122dd565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f9d58ab10a3503272153350436e1136c4dc314b98f6f384aa84b1a991f7e555a560405160405180910390a250565b610e84611640565b73ffffffffffffffffffffffffffffffffffffffff16610ea2611279565b73ffffffffffffffffffffffffffffffffffffffff1614610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef906122dd565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b960405160405180910390a250565b610f87611640565b73ffffffffffffffffffffffffffffffffffffffff16610fa5611279565b73ffffffffffffffffffffffffffffffffffffffff1614610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff2906122dd565b60405180910390fd5b6110056000611862565b565b61100f611640565b73ffffffffffffffffffffffffffffffffffffffff1661102d611279565b73ffffffffffffffffffffffffffffffffffffffff1614611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107a906122dd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110cb57600080fd5b505af11580156110df573d6000803e3d6000fd5b5050505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f11c5c12c41488f9c175e9e6c31fc347892a9800d9de2f1c42fbca06522e204b660405160405180910390a250565b600d818154811061117a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6111b7611640565b73ffffffffffffffffffffffffffffffffffffffff166111d5611279565b73ffffffffffffffffffffffffffffffffffffffff161461122b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611222906122dd565b60405180910390fd5b600854811061126f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112669061229d565b60405180910390fd5b8060098190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6112aa611640565b73ffffffffffffffffffffffffffffffffffffffff166112c8611279565b73ffffffffffffffffffffffffffffffffffffffff161461131e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611315906122dd565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545560405160405180910390a250565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b611432611640565b73ffffffffffffffffffffffffffffffffffffffff16611450611279565b73ffffffffffffffffffffffffffffffffffffffff16146114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149d906122dd565b60405180910390fd5b60018214156114ff5760095481116114f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ea9061239d565b60405180910390fd5b80600881905550611511565b60028214156115105780600a819055505b5b5050565b61151d611640565b73ffffffffffffffffffffffffffffffffffffffff1661153b611279565b73ffffffffffffffffffffffffffffffffffffffff1614611591576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611588906122dd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f8906121fd565b60405180910390fd5b61160a81611862565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600d80549050905090565b600033905090565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170f9061227d565b60405180910390fd5b919050565b6117a0846323b872dd60e01b85858560405160240161173e939291906120ed565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611926565b50505050565b6000600854826117b6919061245d565b90506000600a54826117c8919061245d565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fea084093a0149c07466a61e887ea1b3086b992a25331ee203ac92714010a17a6858585600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004546040516118539594939291906123d8565b60405180910390a35050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611988826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119ed9092919063ffffffff16565b90506000815111156119e857808060200190518101906119a89190611d4a565b6119e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119de9061235d565b60405180910390fd5b5b505050565b60606119fc8484600085611a05565b90509392505050565b606082471015611a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a419061221d565b60405180910390fd5b611a5385611b19565b611a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a899061231d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611abb9190612092565b60006040518083038185875af1925050503d8060008114611af8576040519150601f19603f3d011682016040523d82523d6000602084013e611afd565b606091505b5091509150611b0d828286611b2c565b92505050949350505050565b600080823b905060008111915050919050565b60608315611b3c57829050611b8c565b600083511115611b4f5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8391906121db565b60405180910390fd5b9392505050565b600081359050611ba28161292d565b92915050565b600081519050611bb78161292d565b92915050565b600081519050611bcc81612944565b92915050565b600081359050611be18161295b565b92915050565b600081519050611bf68161295b565b92915050565b600060208284031215611c1257611c1161255d565b5b6000611c2084828501611b93565b91505092915050565b600060208284031215611c3f57611c3e61255d565b5b6000611c4d84828501611ba8565b91505092915050565b60008060008060008060008060008060006101608c8e031215611c7c57611c7b61255d565b5b6000611c8a8e828f01611b93565b9b50506020611c9b8e828f01611bd2565b9a50506040611cac8e828f01611b93565b9950506060611cbd8e828f01611bd2565b9850506080611cce8e828f01611bd2565b97505060a0611cdf8e828f01611bd2565b96505060c0611cf08e828f01611bd2565b95505060e0611d018e828f01611bd2565b945050610100611d138e828f01611bd2565b935050610120611d258e828f01611bd2565b925050610140611d378e828f01611bd2565b9150509295989b509295989b9093969950565b600060208284031215611d6057611d5f61255d565b5b6000611d6e84828501611bbd565b91505092915050565b600060208284031215611d8d57611d8c61255d565b5b6000611d9b84828501611bd2565b91505092915050565b600060208284031215611dba57611db961255d565b5b6000611dc884828501611be7565b91505092915050565b60008060408385031215611de857611de761255d565b5b6000611df685828601611bd2565b9250506020611e0785828601611bd2565b9150509250929050565b611e1a816124b3565b82525050565b611e29816124c5565b82525050565b6000611e3a8261242b565b611e448185612441565b9350611e548185602086016124fb565b80840191505092915050565b6000611e6b82612436565b611e75818561244c565b9350611e858185602086016124fb565b611e8e81612562565b840191505092915050565b6000611ea660268361244c565b9150611eb182612573565b604082019050919050565b6000611ec960268361244c565b9150611ed4826125c2565b604082019050919050565b6000611eec60328361244c565b9150611ef782612611565b604082019050919050565b6000611f0f601f8361244c565b9150611f1a82612660565b602082019050919050565b6000611f3260168361244c565b9150611f3d82612689565b602082019050919050565b6000611f5560398361244c565b9150611f60826126b2565b604082019050919050565b6000611f7860248361244c565b9150611f8382612701565b604082019050919050565b6000611f9b60208361244c565b9150611fa682612750565b602082019050919050565b6000611fbe60258361244c565b9150611fc982612779565b604082019050919050565b6000611fe1601d8361244c565b9150611fec826127c8565b602082019050919050565b600061200460288361244c565b915061200f826127f1565b604082019050919050565b6000612027602a8361244c565b915061203282612840565b604082019050919050565b600061204a60238361244c565b91506120558261288f565b604082019050919050565b600061206d60388361244c565b9150612078826128de565b604082019050919050565b61208c816124f1565b82525050565b600061209e8284611e2f565b915081905092915050565b60006020820190506120be6000830184611e11565b92915050565b60006040820190506120d96000830185611e11565b6120e66020830184611e11565b9392505050565b60006060820190506121026000830186611e11565b61210f6020830185611e11565b61211c6040830184612083565b949350505050565b60006101408201905061213a600083018d611e11565b612147602083018c612083565b612154604083018b611e11565b612161606083018a612083565b61216e6080830189612083565b61217b60a0830188612083565b61218860c0830187612083565b61219560e0830186612083565b6121a3610100830185612083565b6121b1610120830184612083565b9b9a5050505050505050505050565b60006020820190506121d56000830184611e20565b92915050565b600060208201905081810360008301526121f58184611e60565b905092915050565b6000602082019050818103600083015261221681611e99565b9050919050565b6000602082019050818103600083015261223681611ebc565b9050919050565b6000602082019050818103600083015261225681611edf565b9050919050565b6000602082019050818103600083015261227681611f02565b9050919050565b6000602082019050818103600083015261229681611f25565b9050919050565b600060208201905081810360008301526122b681611f48565b9050919050565b600060208201905081810360008301526122d681611f6b565b9050919050565b600060208201905081810360008301526122f681611f8e565b9050919050565b6000602082019050818103600083015261231681611fb1565b9050919050565b6000602082019050818103600083015261233681611fd4565b9050919050565b6000602082019050818103600083015261235681611ff7565b9050919050565b600060208201905081810360008301526123768161201a565b9050919050565b600060208201905081810360008301526123968161203d565b9050919050565b600060208201905081810360008301526123b681612060565b9050919050565b60006020820190506123d26000830184612083565b92915050565b600060a0820190506123ed6000830188612083565b6123fa6020830187612083565b6124076040830186612083565b6124146060830185611e11565b6124216080830184612083565b9695505050505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000612468826124f1565b9150612473836124f1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124a8576124a761252e565b5b828201905092915050565b60006124be826124d1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156125195780820151818401526020810190506124fe565b83811115612528576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e20616d6f756e74206e6565647320746f60008201527f2062652067726561746572207468616e20300000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e2063616e277420626520776176617800600082015250565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b7f524a466163746f72793a206e6f20666565206475726174696f6e20626967676560008201527f72207468616e207068617365206f6e65206475726174696f6e00000000000000602082015250565b7f524a466163746f72793a206973737565722063616e277420626520302061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f524a466163746f72793a206c6971756964207061697220616c7265616479206560008201527f7869737473000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f524a466163746f72793a20746f6b656e2068617320616c72656164792062656560008201527f6e20697373756564000000000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e2063616e27742062652030206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a207068617365206f6e65206475726174696f6e206c6f60008201527f776572207468616e206e6f20666565206475726174696f6e0000000000000000602082015250565b612936816124b3565b811461294157600080fd5b50565b61294d816124c5565b811461295857600080fd5b50565b612964816124f1565b811461296f57600080fd5b5056fea2646970667358221220946eb6b950a080077d136dd34672d5496e00aa1b275a59552ceeda375cd94dfe64736f6c63430008060033",
  "devdoc": {
    "author": "Trader Joe",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Uses clone factory pattern to save space",
        "params": {
          "_eventImplementation": "Implementation of launch event contract",
          "_factory": "Factory used to get info of JoePairs",
          "_penaltyCollector": "Address that collects all withdrawal penalties",
          "_rJoe": "rJOE token address",
          "_router": "Router used to create LP on Trader Joe AMM",
          "_wavax": "WAVAX token address"
        }
      },
      "createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_fixedWithdrawPenalty": "Withdrawal penalty during phase 2",
          "_floorPrice": "Price of each token in AVAX, scaled to 1e18",
          "_issuer": "Address of the project issuing tokens for auction",
          "_issuerTimelock": "Amount of time issuer's LP will be locked for during phase 3",
          "_maxAllocation": "Maximum number of AVAX each participant can commit",
          "_maxWithdrawPenalty": "Maximum withdrawal penalty that can be met during phase 1",
          "_phaseOneStartTime": "Timestamp of when launch event will start",
          "_token": "Token that will be issued through this launch event",
          "_tokenAmount": "Amount of tokens that will be issued",
          "_tokenIncentivesPercent": "Additional tokens that will be given as incentive for locking up LPs during phase 3 expressed as a percentage of the issuing tokens for sale, scaled to 1e18",
          "_userTimelock": "Amount of time users' LPs will be locked for during phase 3"
        },
        "returns": {
          "_0": "Address of launch event contract"
        }
      },
      "numLaunchEvents()": {
        "returns": {
          "_0": "The number of launch events ever created"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFactory(address)": {
        "params": {
          "_factory": "New factory address"
        }
      },
      "setPenaltyCollector(address)": {
        "params": {
          "_penaltyCollector": "New penalty collector address"
        }
      },
      "setPhaseDuration(uint256,uint256)": {
        "params": {
          "_duration": "Duration of phase in seconds",
          "_phaseNumber": "Can be only 1 or 2"
        }
      },
      "setPhaseOneNoFeeDuration(uint256)": {
        "params": {
          "_noFeeDuration": "Duration of no fee phase"
        }
      },
      "setRJoe(address)": {
        "params": {
          "_rJoe": "New rJOE address"
        }
      },
      "setRJoePerAvax(uint256)": {
        "details": "Configured by team between launch events to control inflation"
      },
      "setRouter(address)": {
        "params": {
          "_router": "New router address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Rocket Joe Factory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Creates the launch event factory"
      },
      "createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Creates a launch event contract"
      },
      "numLaunchEvents()": {
        "notice": "Returns the number of launch events"
      },
      "setFactory(address)": {
        "notice": "Set JoeFactory address"
      },
      "setPenaltyCollector(address)": {
        "notice": "Set address to collect withdrawal penalties"
      },
      "setPhaseDuration(uint256,uint256)": {
        "notice": "Set duration of each of the three phases"
      },
      "setPhaseOneNoFeeDuration(uint256)": {
        "notice": "Set the no fee duration of phase 1"
      },
      "setRJoe(address)": {
        "notice": "Set rJOE address"
      },
      "setRJoePerAvax(uint256)": {
        "notice": "Set amount of rJOE required to deposit 1 AVAX into launch event"
      },
      "setRouter(address)": {
        "notice": "Set JoeRouter address"
      }
    },
    "notice": "Factory that creates Rocket Joe events",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 798,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4092,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "penaltyCollector",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4095,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "eventImplementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 4098,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "rJoe",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 4101,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "rJoePerAvax",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4104,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "wavax",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 4107,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "router",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 4110,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "factory",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 4114,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "PHASE_ONE_DURATION",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 4118,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "PHASE_ONE_NO_FEE_DURATION",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 4122,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "PHASE_TWO_DURATION",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 4127,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "getRJLaunchEvent",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 4132,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "isRJLaunchEvent",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4136,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "allRJLaunchEvents",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}