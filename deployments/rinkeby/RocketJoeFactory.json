{
  "address": "0x7f00EbBe93Caa98E805054E894238f0A1fF21A4b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventImplementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rJoe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wavax",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_penaltyCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseOneStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseTwoStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseThreeStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rJoe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "RJLaunchEventCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "SetFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collector",
          "type": "address"
        }
      ],
      "name": "SetPenaltyCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SetRJoe",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "SetRJoePerAvax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PHASE_ONE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PHASE_ONE_NO_FEE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PHASE_TWO_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allRJLaunchEvents",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_phaseOneStartTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenIncentivesPercent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_floorPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxWithdrawPenalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fixedWithdrawPenalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAllocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userTimelock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_issuerTimelock",
          "type": "uint256"
        }
      ],
      "name": "createRJLaunchEvent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getRJLaunchEvent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRJLaunchEvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numLaunchEvents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penaltyCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rJoe",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rJoePerAvax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_penaltyCollector",
          "type": "address"
        }
      ],
      "name": "setPenaltyCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_phaseNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setPhaseDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_noFeeDuration",
          "type": "uint256"
        }
      ],
      "name": "setPhaseOneNoFeeDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rJoe",
          "type": "address"
        }
      ],
      "name": "setRJoe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "setRJoePerAvax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wavax",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xde888fd73fa8260bc541de07cfdfeb2a8a7237e7a7d7c29a5ad1822f8012c38d",
  "receipt": {
    "to": null,
    "from": "0x1d9D82344E76769EB727521822D1EacB834A9024",
    "contractAddress": "0x7f00EbBe93Caa98E805054E894238f0A1fF21A4b",
    "transactionIndex": 3,
    "gasUsed": "2179247",
    "logsBloom": "0x
    "blockHash": "0xbd9344c92444ed25126ac15f36b334b49c1c3f9efe972dfef5e4edd58b712852",
    "transactionHash": "0xde888fd73fa8260bc541de07cfdfeb2a8a7237e7a7d7c29a5ad1822f8012c38d",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 10020355,
        "transactionHash": "0xde888fd73fa8260bc541de07cfdfeb2a8a7237e7a7d7c29a5ad1822f8012c38d",
        "address": "0x7f00EbBe93Caa98E805054E894238f0A1fF21A4b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001d9d82344e76769eb727521822d1eacb834a9024"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0xbd9344c92444ed25126ac15f36b334b49c1c3f9efe972dfef5e4edd58b712852"
      }
    ],
    "blockNumber": 10020355,
    "cumulativeGasUsed": "2384339",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8E8C6bD1Ce1A77885325aa69F3736ED41d66532e",
    "0x5483ce08659fABF0277f9314868Cc4f78687BD08",
    "0xc778417E063141139Fce010982780140Aa0cD5Ab",
    "0x1d9D82344E76769EB727521822D1EacB834A9024",
    "0x7E2528476b14507f003aE9D123334977F5Ad7B14",
    "0x86f83be9770894d8e46301b12E88e14AdC6cdb5F"
  ],
  "numDeployments": 1,
  "solcInputHash": "16b42ba786683df50fcec48414978e75",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rJoe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wavax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_penaltyCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseOneStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseTwoStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseThreeStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rJoe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"RJLaunchEventCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"SetFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"}],\"name\":\"SetPenaltyCollector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SetRJoe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"SetRJoePerAvax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PHASE_ONE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PHASE_ONE_NO_FEE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PHASE_TWO_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRJLaunchEvents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_phaseOneStartTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenIncentivesPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_floorPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fixedWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_issuerTimelock\",\"type\":\"uint256\"}],\"name\":\"createRJLaunchEvent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRJLaunchEvent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRJLaunchEvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numLaunchEvents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rJoe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rJoePerAvax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_penaltyCollector\",\"type\":\"address\"}],\"name\":\"setPenaltyCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_phaseNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setPhaseDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_noFeeDuration\",\"type\":\"uint256\"}],\"name\":\"setPhaseOneNoFeeDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rJoe\",\"type\":\"address\"}],\"name\":\"setRJoe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"setRJoePerAvax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wavax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Uses clone factory pattern to save space\",\"params\":{\"_eventImplementation\":\"Implementation of launch event contract\",\"_factory\":\"Factory used to get info of JoePairs\",\"_penaltyCollector\":\"Address that collects all withdrawal penalties\",\"_rJoe\":\"rJOE token address\",\"_router\":\"Router used to create LP on Trader Joe AMM\",\"_wavax\":\"WAVAX token address\"}},\"createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_fixedWithdrawPenalty\":\"Withdrawal penalty during phase 2\",\"_floorPrice\":\"Price of each token in AVAX, scaled to 1e18\",\"_issuer\":\"Address of the project issuing tokens for auction\",\"_issuerTimelock\":\"Amount of time issuer's LP will be locked for during phase 3\",\"_maxAllocation\":\"Maximum number of AVAX each participant can commit\",\"_maxWithdrawPenalty\":\"Maximum withdrawal penalty that can be met during phase 1\",\"_phaseOneStartTime\":\"Timestamp of when launch event will start\",\"_token\":\"Token that will be issued through this launch event\",\"_tokenAmount\":\"Amount of tokens that will be issued\",\"_tokenIncentivesPercent\":\"Additional tokens that will be given as incentive for locking up LPs during phase 3 expressed as a percentage of the issuing tokens for sale, scaled to 1e18\",\"_userTimelock\":\"Amount of time users' LPs will be locked for during phase 3\"},\"returns\":{\"_0\":\"Address of launch event contract\"}},\"numLaunchEvents()\":{\"returns\":{\"_0\":\"The number of launch events ever created\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFactory(address)\":{\"params\":{\"_factory\":\"New factory address\"}},\"setPenaltyCollector(address)\":{\"params\":{\"_penaltyCollector\":\"New penalty collector address\"}},\"setPhaseDuration(uint256,uint256)\":{\"params\":{\"_duration\":\"Duration of phase in seconds\",\"_phaseNumber\":\"Can be only 1 or 2\"}},\"setPhaseOneNoFeeDuration(uint256)\":{\"params\":{\"_noFeeDuration\":\"Duration of no fee phase\"}},\"setRJoe(address)\":{\"params\":{\"_rJoe\":\"New rJOE address\"}},\"setRJoePerAvax(uint256)\":{\"details\":\"Configured by team between launch events to control inflation\"},\"setRouter(address)\":{\"params\":{\"_router\":\"New router address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Rocket Joe Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates the launch event factory\"},\"createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Creates a launch event contract\"},\"numLaunchEvents()\":{\"notice\":\"Returns the number of launch events\"},\"setFactory(address)\":{\"notice\":\"Set JoeFactory address\"},\"setPenaltyCollector(address)\":{\"notice\":\"Set address to collect withdrawal penalties\"},\"setPhaseDuration(uint256,uint256)\":{\"notice\":\"Set duration of each of the three phases\"},\"setPhaseOneNoFeeDuration(uint256)\":{\"notice\":\"Set the no fee duration of phase 1\"},\"setRJoe(address)\":{\"notice\":\"Set rJOE address\"},\"setRJoePerAvax(uint256)\":{\"notice\":\"Set amount of rJOE required to deposit 1 AVAX into launch event\"},\"setRouter(address)\":{\"notice\":\"Set JoeRouter address\"}},\"notice\":\"Factory that creates Rocket Joe events\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RocketJoeFactory.sol\":\"RocketJoeFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x1cc0efb01cbf008b768fd7b334786a6e358809198bb7e67f1c530af4957c6a21\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/RocketJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\n\\nimport \\\"./interfaces/IRocketJoeFactory.sol\\\";\\nimport \\\"./interfaces/IJoeFactory.sol\\\";\\nimport \\\"./interfaces/ILaunchEvent.sol\\\";\\n\\nimport \\\"./RocketJoeToken.sol\\\";\\n\\n/// @title Rocket Joe Factory\\n/// @author Trader Joe\\n/// @notice Factory that creates Rocket Joe events\\ncontract RocketJoeFactory is IRocketJoeFactory, Ownable {\\n    address public override penaltyCollector;\\n    address public override eventImplementation;\\n\\n    address public override rJoe;\\n    uint256 public override rJoePerAvax;\\n    address public override wavax;\\n    address public override router;\\n    address public override factory;\\n\\n    uint256 public override PHASE_ONE_DURATION = 2 days;\\n    uint256 public override PHASE_ONE_NO_FEE_DURATION = 1 days;\\n    uint256 public override PHASE_TWO_DURATION = 1 days;\\n\\n    mapping(address => address) public override getRJLaunchEvent;\\n    mapping(address => bool) public override isRJLaunchEvent;\\n    address[] public override allRJLaunchEvents;\\n\\n    /// @notice Creates the launch event factory\\n    /// @dev Uses clone factory pattern to save space\\n    /// @param _eventImplementation Implementation of launch event contract\\n    /// @param _rJoe rJOE token address\\n    /// @param _wavax WAVAX token address\\n    /// @param _penaltyCollector Address that collects all withdrawal penalties\\n    /// @param _router Router used to create LP on Trader Joe AMM\\n    /// @param _factory Factory used to get info of JoePairs\\n    constructor(\\n        address _eventImplementation,\\n        address _rJoe,\\n        address _wavax,\\n        address _penaltyCollector,\\n        address _router,\\n        address _factory\\n    ) {\\n        require(\\n            _eventImplementation != address(0) &&\\n                _rJoe != address(0) &&\\n                _wavax != address(0) &&\\n                _penaltyCollector != address(0) &&\\n                _router != address(0) &&\\n                _factory != address(0),\\n            \\\"RJFactory: Addresses can't be null address\\\"\\n        );\\n        eventImplementation = _eventImplementation;\\n        rJoe = _rJoe;\\n\\n        (bool success, ) = address(_rJoe).call(\\n            abi.encodeWithSignature(\\\"initialize()\\\")\\n        );\\n        require(success, \\\"RJFactory: failed to initialize RocketJoeToken\\\");\\n\\n        wavax = _wavax;\\n        penaltyCollector = _penaltyCollector;\\n        router = _router;\\n        factory = _factory;\\n        rJoePerAvax = 100;\\n    }\\n\\n    /// @notice Returns the number of launch events\\n    /// @return The number of launch events ever created\\n    function numLaunchEvents() external view override returns (uint256) {\\n        return allRJLaunchEvents.length;\\n    }\\n\\n    /// @notice Creates a launch event contract\\n    /// @param _issuer Address of the project issuing tokens for auction\\n    /// @param _phaseOneStartTime Timestamp of when launch event will start\\n    /// @param _token Token that will be issued through this launch event\\n    /// @param _tokenAmount Amount of tokens that will be issued\\n    /// @param _tokenIncentivesPercent Additional tokens that will be given as\\n    /// incentive for locking up LPs during phase 3 expressed as a percentage\\n    /// of the issuing tokens for sale, scaled to 1e18\\n    /// @param _floorPrice Price of each token in AVAX, scaled to 1e18\\n    /// @param _maxWithdrawPenalty Maximum withdrawal penalty that can be met\\n    /// during phase 1\\n    /// @param _fixedWithdrawPenalty Withdrawal penalty during phase 2\\n    /// @param _maxAllocation Maximum number of AVAX each participant can commit\\n    /// @param _userTimelock Amount of time users' LPs will be locked for\\n    /// during phase 3\\n    /// @param _issuerTimelock Amount of time issuer's LP will be locked for\\n    /// during phase 3\\n    /// @return Address of launch event contract\\n    function createRJLaunchEvent(\\n        address _issuer,\\n        uint256 _phaseOneStartTime,\\n        address _token,\\n        uint256 _tokenAmount,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external override returns (address) {\\n        require(\\n            getRJLaunchEvent[_token] == address(0),\\n            \\\"RJFactory: token has already been issued\\\"\\n        );\\n        require(_token != address(0), \\\"RJFactory: token can't be 0 address\\\");\\n        require(_token != wavax, \\\"RJFactory: token can't be wavax\\\");\\n        require(\\n            _tokenAmount > 0,\\n            \\\"RJFactory: token amount needs to be greater than 0\\\"\\n        );\\n        require(\\n            IJoeFactory(factory).getPair(wavax, _token) == address(0),\\n            \\\"RJFactory: pair already exists\\\"\\n        );\\n\\n        address launchEvent = Clones.clone(eventImplementation);\\n\\n        // msg.sender needs to approve RocketJoeFactory\\n        IERC20(_token).transferFrom(msg.sender, launchEvent, _tokenAmount);\\n\\n        ILaunchEvent(payable(launchEvent)).initialize(\\n            _issuer,\\n            _phaseOneStartTime,\\n            _token,\\n            _tokenIncentivesPercent,\\n            _floorPrice,\\n            _maxWithdrawPenalty,\\n            _fixedWithdrawPenalty,\\n            _maxAllocation,\\n            _userTimelock,\\n            _issuerTimelock\\n        );\\n\\n        getRJLaunchEvent[_token] = launchEvent;\\n        isRJLaunchEvent[launchEvent] = true;\\n        allRJLaunchEvents.push(launchEvent);\\n\\n        _emitLaunchedEvent(_issuer, _token, _phaseOneStartTime);\\n\\n        return launchEvent;\\n    }\\n\\n    /// @notice Set rJOE address\\n    /// @param _rJoe New rJOE address\\n    function setRJoe(address _rJoe) external override onlyOwner {\\n        rJoe = _rJoe;\\n        emit SetRJoe(_rJoe);\\n    }\\n\\n    /// @notice Set address to collect withdrawal penalties\\n    /// @param _penaltyCollector New penalty collector address\\n    function setPenaltyCollector(address _penaltyCollector)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        penaltyCollector = _penaltyCollector;\\n        emit SetPenaltyCollector(_penaltyCollector);\\n    }\\n\\n    /// @notice Set JoeRouter address\\n    /// @param _router New router address\\n    function setRouter(address _router) external override onlyOwner {\\n        router = _router;\\n        emit SetRouter(_router);\\n    }\\n\\n    /// @notice Set JoeFactory address\\n    /// @param _factory New factory address\\n    function setFactory(address _factory) external override onlyOwner {\\n        factory = _factory;\\n        emit SetFactory(_factory);\\n    }\\n\\n    /// @notice Set amount of rJOE required to deposit 1 AVAX into launch event\\n    /// @dev Configured by team between launch events to control inflation\\n    function setRJoePerAvax(uint256 _rJoePerAvax) external override onlyOwner {\\n        rJoePerAvax = _rJoePerAvax;\\n        emit SetRJoePerAvax(_rJoePerAvax);\\n    }\\n\\n    /// @notice Set duration of each of the three phases\\n    /// @param _phaseNumber Can be only 1 or 2\\n    /// @param _duration Duration of phase in seconds\\n    function setPhaseDuration(uint256 _phaseNumber, uint256 _duration)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        if (_phaseNumber == 1) {\\n            require(\\n                _duration > PHASE_ONE_NO_FEE_DURATION,\\n                \\\"RJFactory: phase one duration lower than no fee duration\\\"\\n            );\\n            PHASE_ONE_DURATION = _duration;\\n        } else if (_phaseNumber == 2) {\\n            PHASE_TWO_DURATION = _duration;\\n        }\\n    }\\n\\n    /// @notice Set the no fee duration of phase 1\\n    /// @param _noFeeDuration Duration of no fee phase\\n    function setPhaseOneNoFeeDuration(uint256 _noFeeDuration)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        require(\\n            _noFeeDuration < PHASE_ONE_DURATION,\\n            \\\"RJFactory: no fee duration bigger than phase one duration\\\"\\n        );\\n        PHASE_ONE_NO_FEE_DURATION = _noFeeDuration;\\n    }\\n\\n    /// @dev This function emits an event after a new launch event has been created\\n    /// It is only seperated out due to `createRJLaunchEvent` having too many local variables\\n    function _emitLaunchedEvent(\\n        address _issuer,\\n        address _token,\\n        uint256 _phaseOneStartTime\\n    ) internal {\\n        uint256 _phaseTwoStartTime = _phaseOneStartTime + PHASE_ONE_DURATION;\\n        uint256 _phaseThreeStartTime = _phaseTwoStartTime + PHASE_TWO_DURATION;\\n\\n        emit RJLaunchEventCreated(\\n            _issuer,\\n            _token,\\n            _phaseOneStartTime,\\n            _phaseTwoStartTime,\\n            _phaseThreeStartTime,\\n            rJoe,\\n            rJoePerAvax\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x44b18979a6fd9dd437d5a2d0a5d897d9703ff067f9d663a296acd0aad5f53177\",\"license\":\"MIT\"},\"contracts/RocketJoeToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IRocketJoeFactory.sol\\\";\\n\\n/// @title Rocket Joe Token - rJOE\\n/// @author Trader Joe\\n/// @notice Infinite supply, but burned to join launch event\\ncontract RocketJoeToken is ERC20(\\\"RocketJoeToken\\\", \\\"rJOE\\\"), Ownable {\\n    IRocketJoeFactory public rocketJoeFactory;\\n\\n    /// @notice Modifier which checks if message.sender is a launch event\\n    modifier onlyRJLaunchEvent() {\\n        require(\\n            rocketJoeFactory.isRJLaunchEvent(msg.sender),\\n            \\\"RocketJoeToken: caller is not a RJLaunchEvent\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice Initialise the rocketJoeFactory address\\n    function initialize() external {\\n        require(\\n            address(rocketJoeFactory) == address(0),\\n            \\\"RocketJoeToken: already initialized\\\"\\n        );\\n\\n        rocketJoeFactory = IRocketJoeFactory(msg.sender);\\n    }\\n\\n    /// @dev Creates `_amount` token to `_to`. Must only be called by the owner (RocketJoeStaking)\\n    /// @param _to The address that will receive the mint\\n    /// @param _amount The amount to be minted\\n    function mint(address _to, uint256 _amount) external onlyOwner {\\n        _mint(_to, _amount);\\n    }\\n\\n    /// @dev Destroys `_amount` tokens from `_from`. Callable only by a RJLaunchEvent\\n    /// this doesn't need any approval in order to avoid double approval before entering each launch event\\n    /// @param _from The address that will burn tokens\\n    /// @param _amount The amount to be burned\\n    function burnFrom(address _from, uint256 _amount)\\n        external\\n        onlyRJLaunchEvent\\n    {\\n        _burn(_from, _amount);\\n    }\\n\\n    /// @dev Hook that is called before any transfer of tokens. This includes\\n    /// minting and burning\\n    /// @param _from The address that will transfer the tokens\\n    /// @param _to The address that will receive the tokens\\n    /// @param _amount The amount of token to send\\n    function _beforeTokenTransfer(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) internal virtual override {\\n        require(\\n            _from == address(0) || _to == address(0) || _from == owner(),\\n            \\\"RocketJoeToken: can't send token\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xc37db46d560304be5192ed0dd22b8b663ffefb771bfce4487982ca22e3036c1d\",\"license\":\"MIT\"},\"contracts/interfaces/IJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.8.0;\\n\\ninterface IJoeFactory {\\n    event PairCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        address pair,\\n        uint256\\n    );\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function migrator() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB)\\n        external\\n        view\\n        returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB)\\n        external\\n        returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n\\n    function setMigrator(address) external;\\n}\\n\",\"keccak256\":\"0xf5b7800d5a67418d3b435f7daa2ab0783c307bab1d603c8b7fb6f5da9055982f\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ILaunchEvent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface ILaunchEvent {\\n    function initialize(\\n        address _issuer,\\n        uint256 _phaseOne,\\n        address _token,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcc8cba9009ed9ee70d73793ce0166b0ce5e5f4ff143f8b48b7f0522966ca64f0\",\"license\":\"MIT\"},\"contracts/interfaces/IRocketJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.8.0;\\n\\ninterface IRocketJoeFactory {\\n    event RJLaunchEventCreated(\\n        address indexed issuer,\\n        address indexed token,\\n        uint256 phaseOneStartTime,\\n        uint256 phaseTwoStartTime,\\n        uint256 phaseThreeStartTime,\\n        address rJoe,\\n        uint256 rJoePerAvax\\n    );\\n    event SetRJoe(address indexed token);\\n    event SetPenaltyCollector(address indexed collector);\\n    event SetRouter(address indexed router);\\n    event SetFactory(address indexed factory);\\n    event SetRJoePerAvax(uint256 rJoePerAvax);\\n\\n    function eventImplementation() external view returns (address);\\n\\n    function penaltyCollector() external view returns (address);\\n\\n    function wavax() external view returns (address);\\n\\n    function rJoePerAvax() external view returns (uint256);\\n\\n    function router() external view returns (address);\\n\\n    function factory() external view returns (address);\\n\\n    function rJoe() external view returns (address);\\n\\n    function PHASE_ONE_DURATION() external view returns (uint256);\\n\\n    function PHASE_ONE_NO_FEE_DURATION() external view returns (uint256);\\n\\n    function PHASE_TWO_DURATION() external view returns (uint256);\\n\\n    function getRJLaunchEvent(address token)\\n        external\\n        view\\n        returns (address launchEvent);\\n\\n    function isRJLaunchEvent(address token) external view returns (bool);\\n\\n    function allRJLaunchEvents(uint256) external view returns (address pair);\\n\\n    function numLaunchEvents() external view returns (uint256);\\n\\n    function createRJLaunchEvent(\\n        address _issuer,\\n        uint256 _phaseOneStartTime,\\n        address _token,\\n        uint256 _tokenAmount,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external returns (address pair);\\n\\n    function setPenaltyCollector(address) external;\\n\\n    function setRouter(address) external;\\n\\n    function setFactory(address) external;\\n\\n    function setRJoe(address) external;\\n\\n    function setRJoePerAvax(uint256) external;\\n\\n    function setPhaseDuration(uint256, uint256) external;\\n\\n    function setPhaseOneNoFeeDuration(uint256) external;\\n}\\n\",\"keccak256\":\"0xfcfb7c95fc38ff1b6f6a65ed41a3c51f037e89d56bb1ab184579f4cd0d8e2bfe\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c8063831b000d116100de578063c571287e11610097578063ee0ce4b311610071578063ee0ce4b314610416578063f2fde38b14610432578063f887ea401461044e578063fbaab6d91461046c57610173565b8063c571287e146103aa578063cd8425be146103da578063db069a51146103f857610173565b8063831b000d146102e8578063853920401461031857806386832abc146103365780638da5cb5b14610352578063c0d7865514610370578063c45a01551461038c57610173565b80634edd499b116101305780634edd499b1461023c5780635354e3b71461025a5780635b7d8f051461028a5780635bb47808146102a6578063715018a6146102c25780637f3d8f4f146102cc57610173565b8063117be4c214610178578063145b026714610196578063308097b2146101b457806333b232a9146101d25780633e9e8d5f146102025780634ccb51d014610220575b600080fd5b61018061048a565b60405161018d9190611a53565b60405180910390f35b61019e6104b0565b6040516101ab9190611a53565b60405180910390f35b6101bc6104d6565b6040516101c99190611a53565b60405180910390f35b6101ec60048036038101906101e791906116e0565b6104fc565b6040516101f99190611b6a565b60405180910390f35b61020a61051c565b6040516102179190611cc5565b60405180910390f35b61023a6004803603810190610235919061185b565b610522565b005b6102446105df565b6040516102519190611cc5565b60405180910390f35b610274600480360381019061026f919061173a565b6105e5565b6040516102819190611a53565b60405180910390f35b6102a4600480360381019061029f91906116e0565b610bc8565b005b6102c060048036038101906102bb91906116e0565b610ccb565b005b6102ca610dce565b005b6102e660048036038101906102e191906116e0565b610e56565b005b61030260048036038101906102fd919061185b565b610f59565b60405161030f9190611a53565b60405180910390f35b610320610f98565b60405161032d9190611cc5565b60405180910390f35b610350600480360381019061034b919061185b565b610f9e565b005b61035a611068565b6040516103679190611a53565b60405180910390f35b61038a600480360381019061038591906116e0565b611091565b005b610394611194565b6040516103a19190611a53565b60405180910390f35b6103c460048036038101906103bf91906116e0565b6111ba565b6040516103d19190611a53565b60405180910390f35b6103e26111ed565b6040516103ef9190611a53565b60405180910390f35b610400611213565b60405161040d9190611cc5565b60405180910390f35b610430600480360381019061042b9190611888565b611219565b005b61044c600480360381019061044791906116e0565b611304565b005b6104566113fc565b6040516104639190611a53565b60405180910390f35b610474611422565b6040516104819190611cc5565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c6020528060005260406000206000915054906101000a900460ff1681565b60085481565b61052a61142f565b73ffffffffffffffffffffffffffffffffffffffff16610548611068565b73ffffffffffffffffffffffffffffffffffffffff161461059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590611c25565b60405180910390fd5b806004819055507fd09367aecf1c1393b768cca7f6d789b6557ea9bf86dd59661861d1a98d940397816040516105d49190611cc5565b60405180910390a150565b600a5481565b60008073ffffffffffffffffffffffffffffffffffffffff16600b60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90611c45565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90611c65565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614156107b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ac90611bc5565b60405180910390fd5b600089116107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90611ba5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a43905600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d6040518363ffffffff1660e01b815260040161088f929190611a6e565b60206040518083038186803b1580156108a757600080fd5b505afa1580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df919061170d565b73ffffffffffffffffffffffffffffffffffffffff1614610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90611ca5565b60405180910390fd5b6000610962600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611437565b90508a73ffffffffffffffffffffffffffffffffffffffff166323b872dd33838d6040518463ffffffff1660e01b81526004016109a193929190611a97565b602060405180830381600087803b1580156109bb57600080fd5b505af11580156109cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f3919061182e565b508073ffffffffffffffffffffffffffffffffffffffff166302ee594b8e8e8e8d8d8d8d8d8d8d6040518b63ffffffff1660e01b8152600401610a3f9a99989796959493929190611ace565b600060405180830381600087803b158015610a5957600080fd5b505af1158015610a6d573d6000803e3d6000fd5b5050505080600b60008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600d819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bb58d8c8e61150c565b809150509b9a5050505050505050505050565b610bd061142f565b73ffffffffffffffffffffffffffffffffffffffff16610bee611068565b73ffffffffffffffffffffffffffffffffffffffff1614610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611c25565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f9d58ab10a3503272153350436e1136c4dc314b98f6f384aa84b1a991f7e555a560405160405180910390a250565b610cd361142f565b73ffffffffffffffffffffffffffffffffffffffff16610cf1611068565b73ffffffffffffffffffffffffffffffffffffffff1614610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e90611c25565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b960405160405180910390a250565b610dd661142f565b73ffffffffffffffffffffffffffffffffffffffff16610df4611068565b73ffffffffffffffffffffffffffffffffffffffff1614610e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4190611c25565b60405180910390fd5b610e5460006115c8565b565b610e5e61142f565b73ffffffffffffffffffffffffffffffffffffffff16610e7c611068565b73ffffffffffffffffffffffffffffffffffffffff1614610ed2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec990611c25565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f11c5c12c41488f9c175e9e6c31fc347892a9800d9de2f1c42fbca06522e204b660405160405180910390a250565b600d8181548110610f6957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b610fa661142f565b73ffffffffffffffffffffffffffffffffffffffff16610fc4611068565b73ffffffffffffffffffffffffffffffffffffffff161461101a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101190611c25565b60405180910390fd5b600854811061105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105590611c05565b60405180910390fd5b8060098190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61109961142f565b73ffffffffffffffffffffffffffffffffffffffff166110b7611068565b73ffffffffffffffffffffffffffffffffffffffff161461110d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110490611c25565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545560405160405180910390a250565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b61122161142f565b73ffffffffffffffffffffffffffffffffffffffff1661123f611068565b73ffffffffffffffffffffffffffffffffffffffff1614611295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128c90611c25565b60405180910390fd5b60018214156112ee5760095481116112e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d990611c85565b60405180910390fd5b80600881905550611300565b60028214156112ff5780600a819055505b5b5050565b61130c61142f565b73ffffffffffffffffffffffffffffffffffffffff1661132a611068565b73ffffffffffffffffffffffffffffffffffffffff1614611380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137790611c25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e790611b85565b60405180910390fd5b6113f9816115c8565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600d80549050905090565b600033905090565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fe90611be5565b60405180910390fd5b919050565b60006008548261151c9190611d44565b90506000600a548261152e9190611d44565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fea084093a0149c07466a61e887ea1b3086b992a25331ee203ac92714010a17a6858585600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004546040516115b9959493929190611ce0565b60405180910390a35050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061169b81612094565b92915050565b6000815190506116b081612094565b92915050565b6000815190506116c5816120ab565b92915050565b6000813590506116da816120c2565b92915050565b6000602082840312156116f6576116f5611e11565b5b60006117048482850161168c565b91505092915050565b60006020828403121561172357611722611e11565b5b6000611731848285016116a1565b91505092915050565b60008060008060008060008060008060006101608c8e0312156117605761175f611e11565b5b600061176e8e828f0161168c565b9b5050602061177f8e828f016116cb565b9a505060406117908e828f0161168c565b99505060606117a18e828f016116cb565b98505060806117b28e828f016116cb565b97505060a06117c38e828f016116cb565b96505060c06117d48e828f016116cb565b95505060e06117e58e828f016116cb565b9450506101006117f78e828f016116cb565b9350506101206118098e828f016116cb565b92505061014061181b8e828f016116cb565b9150509295989b509295989b9093969950565b60006020828403121561184457611843611e11565b5b6000611852848285016116b6565b91505092915050565b60006020828403121561187157611870611e11565b5b600061187f848285016116cb565b91505092915050565b6000806040838503121561189f5761189e611e11565b5b60006118ad858286016116cb565b92505060206118be858286016116cb565b9150509250929050565b6118d181611d9a565b82525050565b6118e081611dac565b82525050565b60006118f3602683611d33565b91506118fe82611e16565b604082019050919050565b6000611916603283611d33565b915061192182611e65565b604082019050919050565b6000611939601f83611d33565b915061194482611eb4565b602082019050919050565b600061195c601683611d33565b915061196782611edd565b602082019050919050565b600061197f603983611d33565b915061198a82611f06565b604082019050919050565b60006119a2602083611d33565b91506119ad82611f55565b602082019050919050565b60006119c5602883611d33565b91506119d082611f7e565b604082019050919050565b60006119e8602383611d33565b91506119f382611fcd565b604082019050919050565b6000611a0b603883611d33565b9150611a168261201c565b604082019050919050565b6000611a2e601e83611d33565b9150611a398261206b565b602082019050919050565b611a4d81611dd8565b82525050565b6000602082019050611a6860008301846118c8565b92915050565b6000604082019050611a8360008301856118c8565b611a9060208301846118c8565b9392505050565b6000606082019050611aac60008301866118c8565b611ab960208301856118c8565b611ac66040830184611a44565b949350505050565b600061014082019050611ae4600083018d6118c8565b611af1602083018c611a44565b611afe604083018b6118c8565b611b0b606083018a611a44565b611b186080830189611a44565b611b2560a0830188611a44565b611b3260c0830187611a44565b611b3f60e0830186611a44565b611b4d610100830185611a44565b611b5b610120830184611a44565b9b9a5050505050505050505050565b6000602082019050611b7f60008301846118d7565b92915050565b60006020820190508181036000830152611b9e816118e6565b9050919050565b60006020820190508181036000830152611bbe81611909565b9050919050565b60006020820190508181036000830152611bde8161192c565b9050919050565b60006020820190508181036000830152611bfe8161194f565b9050919050565b60006020820190508181036000830152611c1e81611972565b9050919050565b60006020820190508181036000830152611c3e81611995565b9050919050565b60006020820190508181036000830152611c5e816119b8565b9050919050565b60006020820190508181036000830152611c7e816119db565b9050919050565b60006020820190508181036000830152611c9e816119fe565b9050919050565b60006020820190508181036000830152611cbe81611a21565b9050919050565b6000602082019050611cda6000830184611a44565b92915050565b600060a082019050611cf56000830188611a44565b611d026020830187611a44565b611d0f6040830186611a44565b611d1c60608301856118c8565b611d296080830184611a44565b9695505050505050565b600082825260208201905092915050565b6000611d4f82611dd8565b9150611d5a83611dd8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d8f57611d8e611de2565b5b828201905092915050565b6000611da582611db8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e20616d6f756e74206e6565647320746f60008201527f2062652067726561746572207468616e20300000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e2063616e277420626520776176617800600082015250565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b7f524a466163746f72793a206e6f20666565206475726174696f6e20626967676560008201527f72207468616e207068617365206f6e65206475726174696f6e00000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f524a466163746f72793a20746f6b656e2068617320616c72656164792062656560008201527f6e20697373756564000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e2063616e27742062652030206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a207068617365206f6e65206475726174696f6e206c6f60008201527f776572207468616e206e6f20666565206475726174696f6e0000000000000000602082015250565b7f524a466163746f72793a207061697220616c7265616479206578697374730000600082015250565b61209d81611d9a565b81146120a857600080fd5b50565b6120b481611dac565b81146120bf57600080fd5b50565b6120cb81611dd8565b81146120d657600080fd5b5056fea2646970667358221220525e75f0ff7681eaf813058013ad79b1cd9d59406284b60dbfdc0b570cc1f96364736f6c63430008060033",
  "devdoc": {
    "author": "Trader Joe",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Uses clone factory pattern to save space",
        "params": {
          "_eventImplementation": "Implementation of launch event contract",
          "_factory": "Factory used to get info of JoePairs",
          "_penaltyCollector": "Address that collects all withdrawal penalties",
          "_rJoe": "rJOE token address",
          "_router": "Router used to create LP on Trader Joe AMM",
          "_wavax": "WAVAX token address"
        }
      },
      "createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_fixedWithdrawPenalty": "Withdrawal penalty during phase 2",
          "_floorPrice": "Price of each token in AVAX, scaled to 1e18",
          "_issuer": "Address of the project issuing tokens for auction",
          "_issuerTimelock": "Amount of time issuer's LP will be locked for during phase 3",
          "_maxAllocation": "Maximum number of AVAX each participant can commit",
          "_maxWithdrawPenalty": "Maximum withdrawal penalty that can be met during phase 1",
          "_phaseOneStartTime": "Timestamp of when launch event will start",
          "_token": "Token that will be issued through this launch event",
          "_tokenAmount": "Amount of tokens that will be issued",
          "_tokenIncentivesPercent": "Additional tokens that will be given as incentive for locking up LPs during phase 3 expressed as a percentage of the issuing tokens for sale, scaled to 1e18",
          "_userTimelock": "Amount of time users' LPs will be locked for during phase 3"
        },
        "returns": {
          "_0": "Address of launch event contract"
        }
      },
      "numLaunchEvents()": {
        "returns": {
          "_0": "The number of launch events ever created"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFactory(address)": {
        "params": {
          "_factory": "New factory address"
        }
      },
      "setPenaltyCollector(address)": {
        "params": {
          "_penaltyCollector": "New penalty collector address"
        }
      },
      "setPhaseDuration(uint256,uint256)": {
        "params": {
          "_duration": "Duration of phase in seconds",
          "_phaseNumber": "Can be only 1 or 2"
        }
      },
      "setPhaseOneNoFeeDuration(uint256)": {
        "params": {
          "_noFeeDuration": "Duration of no fee phase"
        }
      },
      "setRJoe(address)": {
        "params": {
          "_rJoe": "New rJOE address"
        }
      },
      "setRJoePerAvax(uint256)": {
        "details": "Configured by team between launch events to control inflation"
      },
      "setRouter(address)": {
        "params": {
          "_router": "New router address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Rocket Joe Factory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Creates the launch event factory"
      },
      "createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Creates a launch event contract"
      },
      "numLaunchEvents()": {
        "notice": "Returns the number of launch events"
      },
      "setFactory(address)": {
        "notice": "Set JoeFactory address"
      },
      "setPenaltyCollector(address)": {
        "notice": "Set address to collect withdrawal penalties"
      },
      "setPhaseDuration(uint256,uint256)": {
        "notice": "Set duration of each of the three phases"
      },
      "setPhaseOneNoFeeDuration(uint256)": {
        "notice": "Set the no fee duration of phase 1"
      },
      "setRJoe(address)": {
        "notice": "Set rJOE address"
      },
      "setRJoePerAvax(uint256)": {
        "notice": "Set amount of rJOE required to deposit 1 AVAX into launch event"
      },
      "setRouter(address)": {
        "notice": "Set JoeRouter address"
      }
    },
    "notice": "Factory that creates Rocket Joe events",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2381,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "penaltyCollector",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2384,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "eventImplementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2387,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "rJoe",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2390,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "rJoePerAvax",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2393,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "wavax",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 2396,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "router",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 2399,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "factory",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 2403,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "PHASE_ONE_DURATION",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2407,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "PHASE_ONE_NO_FEE_DURATION",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2411,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "PHASE_TWO_DURATION",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 2416,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "getRJLaunchEvent",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2421,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "isRJLaunchEvent",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2425,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "allRJLaunchEvents",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}