{
  "address": "0x2c09113FFBE01268545BCFD0688cE1c60751D579",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IssuingTokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "NoFeeDurationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phase",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "PhaseDurationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "launchEvent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseOneStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseTwoStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "phaseThreeStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rJoe",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "RJLaunchEventCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "SetEventImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "SetFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collector",
          "type": "address"
        }
      ],
      "name": "SetPenaltyCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SetRJoe",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "SetRJoePerAvax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allRJLaunchEvents",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_phaseOneStartTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmountIncludingIncentives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenIncentivesPercent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_floorPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxWithdrawPenalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fixedWithdrawPenalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAllocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userTimelock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_issuerTimelock",
          "type": "uint256"
        }
      ],
      "name": "createRJLaunchEvent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getRJLaunchEvent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventImplementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rJoe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wavax",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_penaltyCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRJLaunchEvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numLaunchEvents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penaltyCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "phaseOneDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "phaseOneNoFeeDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "phaseTwoDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rJoe",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rJoePerAvax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventImplementation",
          "type": "address"
        }
      ],
      "name": "setEventImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_penaltyCollector",
          "type": "address"
        }
      ],
      "name": "setPenaltyCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_phaseNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setPhaseDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_noFeeDuration",
          "type": "uint256"
        }
      ],
      "name": "setPhaseOneNoFeeDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rJoePerAvax",
          "type": "uint256"
        }
      ],
      "name": "setRJoePerAvax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wavax",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb8c6a9a5f962139c1ba4e5f69b54ad1c200376f59996f24835db21a87895e65b",
  "receipt": {
    "to": null,
    "from": "0x1d9D82344E76769EB727521822D1EacB834A9024",
    "contractAddress": "0x2c09113FFBE01268545BCFD0688cE1c60751D579",
    "transactionIndex": 1,
    "gasUsed": "3251891",
    "logsBloom": "0x
    "blockHash": "0x7cf36be04d663cfdbe13a2eced7b7ba99ece165844dd1037318292dac6554841",
    "transactionHash": "0xb8c6a9a5f962139c1ba4e5f69b54ad1c200376f59996f24835db21a87895e65b",
    "logs": [],
    "blockNumber": 10098567,
    "cumulativeGasUsed": "3319312",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8e7534e55a46e50e0d85f4f885453de2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IssuingTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"NoFeeDurationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"PhaseDurationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchEvent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseOneStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseTwoStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phaseThreeStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rJoe\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"RJLaunchEventCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"SetEventImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"SetFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"}],\"name\":\"SetPenaltyCollector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SetRJoe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"SetRJoePerAvax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRJLaunchEvents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_phaseOneStartTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmountIncludingIncentives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenIncentivesPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_floorPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fixedWithdrawPenalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userTimelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_issuerTimelock\",\"type\":\"uint256\"}],\"name\":\"createRJLaunchEvent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRJLaunchEvent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rJoe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wavax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_penaltyCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRJLaunchEvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numLaunchEvents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phaseOneDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phaseOneNoFeeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phaseTwoDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rJoe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rJoePerAvax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventImplementation\",\"type\":\"address\"}],\"name\":\"setEventImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_penaltyCollector\",\"type\":\"address\"}],\"name\":\"setPenaltyCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_phaseNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setPhaseDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_noFeeDuration\",\"type\":\"uint256\"}],\"name\":\"setPhaseOneNoFeeDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rJoePerAvax\",\"type\":\"uint256\"}],\"name\":\"setRJoePerAvax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wavax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{\"createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_fixedWithdrawPenalty\":\"Withdrawal penalty during phase 2\",\"_floorPrice\":\"Price of each token in AVAX, scaled to 1e18\",\"_issuer\":\"Address of the project issuing tokens for auction\",\"_issuerTimelock\":\"Amount of time issuer's LP will be locked for during phase 3\",\"_maxAllocation\":\"Maximum number of AVAX each participant can commit\",\"_maxWithdrawPenalty\":\"Maximum withdrawal penalty that can be met during phase 1\",\"_phaseOneStartTime\":\"Timestamp of when launch event will start\",\"_token\":\"Token that will be issued through this launch event\",\"_tokenAmountIncludingIncentives\":\"Amount of tokens that will be issued\",\"_tokenIncentivesPercent\":\"is the percentage of the issued tokens for sale that will be used as incentives for locking the LP during phase 3. These incentives are on top of the tokens for sale. For example, if we issue 100 tokens for sale and 5% of incentives, then 5 tokens will be given as incentives and in total the contract should have 105 tokens\",\"_userTimelock\":\"Amount of time users' LPs will be locked for during phase 3\"},\"returns\":{\"_0\":\"Address of launch event contract\"}},\"initialize(address,address,address,address,address,address)\":{\"details\":\"Uses clone factory pattern to save space\",\"params\":{\"_eventImplementation\":\"Implementation of launch event contract\",\"_factory\":\"Factory used to get info of JoePairs\",\"_penaltyCollector\":\"Address that collects all withdrawal penalties\",\"_rJoe\":\"rJOE token address\",\"_router\":\"Router used to create LP on Trader Joe AMM\",\"_wavax\":\"WAVAX token address\"}},\"numLaunchEvents()\":{\"returns\":{\"_0\":\"The number of launch events ever created\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setEventImplementation(address)\":{\"params\":{\"_eventImplementation\":\"The address of the implementation contract\"}},\"setFactory(address)\":{\"params\":{\"_factory\":\"New factory address\"}},\"setPenaltyCollector(address)\":{\"params\":{\"_penaltyCollector\":\"New penalty collector address\"}},\"setPhaseDuration(uint256,uint256)\":{\"params\":{\"_duration\":\"Duration of phase in seconds\",\"_phaseNumber\":\"Can be only 1 or 2\"}},\"setPhaseOneNoFeeDuration(uint256)\":{\"params\":{\"_noFeeDuration\":\"Duration of no fee phase\"}},\"setRJoePerAvax(uint256)\":{\"details\":\"Configured by team between launch events to control inflation\"},\"setRouter(address)\":{\"params\":{\"_router\":\"New router address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Rocket Joe Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Creates a launch event contract\"},\"initialize(address,address,address,address,address,address)\":{\"notice\":\"initializes the launch event factory\"},\"numLaunchEvents()\":{\"notice\":\"Returns the number of launch events\"},\"setEventImplementation(address)\":{\"notice\":\"Set the proxy implementation address\"},\"setFactory(address)\":{\"notice\":\"Set JoeFactory address\"},\"setPenaltyCollector(address)\":{\"notice\":\"Set address to collect withdrawal penalties\"},\"setPhaseDuration(uint256,uint256)\":{\"notice\":\"Set duration of each of the three phases\"},\"setPhaseOneNoFeeDuration(uint256)\":{\"notice\":\"Set the no fee duration of phase 1\"},\"setRJoePerAvax(uint256)\":{\"notice\":\"Set amount of rJOE required to deposit 1 AVAX into launch event\"},\"setRouter(address)\":{\"notice\":\"Set JoeRouter address\"}},\"notice\":\"Factory that creates Rocket Joe events\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RocketJoeFactory.sol\":\"RocketJoeFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9ffedb33e192f8821cbaead72596c79ea87fb28a73f8d3a9f5004449799f8e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x1cc0efb01cbf008b768fd7b334786a6e358809198bb7e67f1c530af4957c6a21\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"contracts/RocketJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IRocketJoeFactory.sol\\\";\\nimport \\\"./interfaces/IJoeFactory.sol\\\";\\nimport \\\"./interfaces/IJoePair.sol\\\";\\nimport \\\"./interfaces/ILaunchEvent.sol\\\";\\nimport \\\"./interfaces/IRocketJoeToken.sol\\\";\\n\\n/// @title Rocket Joe Factory\\n/// @author Trader Joe\\n/// @notice Factory that creates Rocket Joe events\\ncontract RocketJoeFactory is\\n    IRocketJoeFactory,\\n    Initializable,\\n    OwnableUpgradeable\\n{\\n    using SafeERC20 for IERC20;\\n\\n    address public override penaltyCollector;\\n    address public override eventImplementation;\\n\\n    address public override rJoe;\\n    uint256 public override rJoePerAvax;\\n    address public override wavax;\\n    address public override router;\\n    address public override factory;\\n\\n    uint256 public override phaseOneDuration;\\n    uint256 public override phaseOneNoFeeDuration;\\n    uint256 public override phaseTwoDuration;\\n\\n    mapping(address => address) public override getRJLaunchEvent;\\n    mapping(address => bool) public override isRJLaunchEvent;\\n    address[] public override allRJLaunchEvents;\\n\\n    /// @notice initializes the launch event factory\\n    /// @dev Uses clone factory pattern to save space\\n    /// @param _eventImplementation Implementation of launch event contract\\n    /// @param _rJoe rJOE token address\\n    /// @param _wavax WAVAX token address\\n    /// @param _penaltyCollector Address that collects all withdrawal penalties\\n    /// @param _router Router used to create LP on Trader Joe AMM\\n    /// @param _factory Factory used to get info of JoePairs\\n    function initialize(\\n        address _eventImplementation,\\n        address _rJoe,\\n        address _wavax,\\n        address _penaltyCollector,\\n        address _router,\\n        address _factory\\n    ) public initializer {\\n        __Ownable_init();\\n        require(\\n            _eventImplementation != address(0),\\n            \\\"RJFactory: event implentation can't be zero address\\\"\\n        );\\n        require(_rJoe != address(0), \\\"RJFactory: rJOE can't be zero address\\\");\\n        require(_wavax != address(0), \\\"RJFactory: wavax can't be zero address\\\");\\n        require(\\n            _penaltyCollector != address(0),\\n            \\\"RJFactory: penalty collector can't be zero address\\\"\\n        );\\n        require(\\n            _router != address(0),\\n            \\\"RJFactory: router can't be zero address\\\"\\n        );\\n        require(\\n            _factory != address(0),\\n            \\\"RJFactory: factory can't be zero address\\\"\\n        );\\n        IRocketJoeToken(_rJoe).initialize();\\n\\n        eventImplementation = _eventImplementation;\\n        rJoe = _rJoe;\\n\\n        wavax = _wavax;\\n        penaltyCollector = _penaltyCollector;\\n        router = _router;\\n        factory = _factory;\\n        rJoePerAvax = 100e18;\\n\\n        phaseOneDuration = 2 days;\\n        phaseOneNoFeeDuration = 1 days;\\n        phaseTwoDuration = 1 days;\\n    }\\n\\n    /// @notice Returns the number of launch events\\n    /// @return The number of launch events ever created\\n    function numLaunchEvents() external view override returns (uint256) {\\n        return allRJLaunchEvents.length;\\n    }\\n\\n    /// @notice Creates a launch event contract\\n    /// @param _issuer Address of the project issuing tokens for auction\\n    /// @param _phaseOneStartTime Timestamp of when launch event will start\\n    /// @param _token Token that will be issued through this launch event\\n    /// @param _tokenAmountIncludingIncentives Amount of tokens that will be issued\\n    /// @param _tokenIncentivesPercent Additional tokens that will be given as\\n    /// incentive for locking up LPs during phase 3 expressed as a percentage\\n    /// of the issuing tokens for sale, scaled to 1e18\\n    /// @param _tokenIncentivesPercent is the percentage of the issued tokens for sale that will be used as incentives for locking the LP during phase 3.\\n    /// These incentives are on top of the tokens for sale.\\n    /// For example, if we issue 100 tokens for sale and 5% of incentives, then 5 tokens will be given as incentives and in total the contract should have 105 tokens\\n    /// @param _floorPrice Price of each token in AVAX, scaled to 1e18\\n    /// @param _maxWithdrawPenalty Maximum withdrawal penalty that can be met\\n    /// during phase 1\\n    /// @param _fixedWithdrawPenalty Withdrawal penalty during phase 2\\n    /// @param _maxAllocation Maximum number of AVAX each participant can commit\\n    /// @param _userTimelock Amount of time users' LPs will be locked for\\n    /// during phase 3\\n    /// @param _issuerTimelock Amount of time issuer's LP will be locked for\\n    /// during phase 3\\n    /// @return Address of launch event contract\\n    function createRJLaunchEvent(\\n        address _issuer,\\n        uint256 _phaseOneStartTime,\\n        address _token,\\n        uint256 _tokenAmountIncludingIncentives,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external override onlyOwner returns (address) {\\n        require(\\n            getRJLaunchEvent[_token] == address(0),\\n            \\\"RJFactory: token has already been issued\\\"\\n        );\\n        require(_issuer != address(0), \\\"RJFactory: issuer can't be 0 address\\\");\\n        require(_token != address(0), \\\"RJFactory: token can't be 0 address\\\");\\n        require(_token != wavax, \\\"RJFactory: token can't be wavax\\\");\\n        require(\\n            _tokenAmountIncludingIncentives > 0,\\n            \\\"RJFactory: token amount including incentives needs to be greater than 0\\\"\\n        );\\n\\n        // avoids stack too deep error\\n        {\\n            address pair = IJoeFactory(factory).getPair(_token, wavax);\\n            require(\\n                pair == address(0) || IJoePair(pair).totalSupply() == 0,\\n                \\\"RJFactory: liquid pair already exists\\\"\\n            );\\n        }\\n\\n        address launchEvent = Clones.clone(eventImplementation);\\n\\n        getRJLaunchEvent[_token] = launchEvent;\\n        isRJLaunchEvent[launchEvent] = true;\\n        allRJLaunchEvents.push(launchEvent);\\n\\n        // msg.sender needs to approve RocketJoeFactory\\n        IERC20(_token).safeTransferFrom(\\n            msg.sender,\\n            launchEvent,\\n            _tokenAmountIncludingIncentives\\n        );\\n\\n        emit IssuingTokenDeposited(_token, _tokenAmountIncludingIncentives);\\n\\n        ILaunchEvent(launchEvent).initialize(\\n            _issuer,\\n            _phaseOneStartTime,\\n            _token,\\n            _tokenIncentivesPercent,\\n            _floorPrice,\\n            _maxWithdrawPenalty,\\n            _fixedWithdrawPenalty,\\n            _maxAllocation,\\n            _userTimelock,\\n            _issuerTimelock\\n        );\\n\\n        _emitLaunchedEvent(launchEvent, _issuer, _token, _phaseOneStartTime);\\n\\n        return launchEvent;\\n    }\\n\\n    /// @notice Set address to collect withdrawal penalties\\n    /// @param _penaltyCollector New penalty collector address\\n    function setPenaltyCollector(address _penaltyCollector)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        require(\\n            _penaltyCollector != address(0),\\n            \\\"RJFactory: penalty collector can't be address zero\\\"\\n        );\\n        penaltyCollector = _penaltyCollector;\\n        emit SetPenaltyCollector(_penaltyCollector);\\n    }\\n\\n    /// @notice Set JoeRouter address\\n    /// @param _router New router address\\n    function setRouter(address _router) external override onlyOwner {\\n        require(\\n            _router != address(0),\\n            \\\"RJFactory: router can't be address zero\\\"\\n        );\\n        router = _router;\\n        emit SetRouter(_router);\\n    }\\n\\n    /// @notice Set JoeFactory address\\n    /// @param _factory New factory address\\n    function setFactory(address _factory) external override onlyOwner {\\n        require(\\n            _factory != address(0),\\n            \\\"RJFactory: factory can't be address zero\\\"\\n        );\\n        factory = _factory;\\n        emit SetFactory(_factory);\\n    }\\n\\n    /// @notice Set amount of rJOE required to deposit 1 AVAX into launch event\\n    /// @dev Configured by team between launch events to control inflation\\n    function setRJoePerAvax(uint256 _rJoePerAvax) external override onlyOwner {\\n        rJoePerAvax = _rJoePerAvax;\\n        emit SetRJoePerAvax(_rJoePerAvax);\\n    }\\n\\n    /// @notice Set duration of each of the three phases\\n    /// @param _phaseNumber Can be only 1 or 2\\n    /// @param _duration Duration of phase in seconds\\n    function setPhaseDuration(uint256 _phaseNumber, uint256 _duration)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        if (_phaseNumber == 1) {\\n            require(\\n                _duration > phaseOneNoFeeDuration,\\n                \\\"RJFactory: phase one duration less than or equal to no fee duration\\\"\\n            );\\n            phaseOneDuration = _duration;\\n        } else if (_phaseNumber == 2) {\\n            phaseTwoDuration = _duration;\\n        }\\n        emit PhaseDurationChanged(_phaseNumber, _duration);\\n    }\\n\\n    /// @notice Set the no fee duration of phase 1\\n    /// @param _noFeeDuration Duration of no fee phase\\n    function setPhaseOneNoFeeDuration(uint256 _noFeeDuration)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        require(\\n            _noFeeDuration < phaseOneDuration,\\n            \\\"RJFactory: no fee duration greater than or equal to phase one duration\\\"\\n        );\\n        phaseOneNoFeeDuration = _noFeeDuration;\\n        emit NoFeeDurationChanged(_noFeeDuration);\\n    }\\n\\n    /// @notice Set the proxy implementation address\\n    /// @param _eventImplementation The address of the implementation contract\\n    function setEventImplementation(address _eventImplementation)\\n        external\\n        override\\n        onlyOwner\\n    {\\n        require(_eventImplementation != address(0), \\\"RJFactory: can't be null\\\");\\n        eventImplementation = _eventImplementation;\\n        emit SetEventImplementation(_eventImplementation);\\n    }\\n\\n    /// @dev This function emits an event after a new launch event has been created\\n    /// It is only seperated out due to `createRJLaunchEvent` having too many local variables\\n    function _emitLaunchedEvent(\\n        address _launchEventAddress,\\n        address _issuer,\\n        address _token,\\n        uint256 _phaseOneStartTime\\n    ) internal {\\n        uint256 _phaseTwoStartTime = _phaseOneStartTime + phaseOneDuration;\\n        uint256 _phaseThreeStartTime = _phaseTwoStartTime + phaseTwoDuration;\\n\\n        emit RJLaunchEventCreated(\\n            _launchEventAddress,\\n            _issuer,\\n            _token,\\n            _phaseOneStartTime,\\n            _phaseTwoStartTime,\\n            _phaseThreeStartTime,\\n            rJoe,\\n            rJoePerAvax\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x22541f24b0acbccded3af07b6c85717076177b9a3bf2933abfdc3b83a19cb361\",\"license\":\"MIT\"},\"contracts/interfaces/IJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.6;\\n\\ninterface IJoeFactory {\\n    event PairCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        address pair,\\n        uint256\\n    );\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function migrator() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB)\\n        external\\n        view\\n        returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB)\\n        external\\n        returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n\\n    function setMigrator(address) external;\\n}\\n\",\"keccak256\":\"0x9c63038da544f947e8c05ab7006ec5f032ad759bd39ff8c7a60b218275573158\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IJoePair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.6;\\n\\ninterface IJoePair {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external pure returns (string memory);\\n\\n    function symbol() external pure returns (string memory);\\n\\n    function decimals() external pure returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n    event Burn(\\n        address indexed sender,\\n        uint256 amount0,\\n        uint256 amount1,\\n        address indexed to\\n    );\\n    event Swap(\\n        address indexed sender,\\n        uint256 amount0In,\\n        uint256 amount1In,\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function price0CumulativeLast() external view returns (uint256);\\n\\n    function price1CumulativeLast() external view returns (uint256);\\n\\n    function kLast() external view returns (uint256);\\n\\n    function mint(address to) external returns (uint256 liquidity);\\n\\n    function burn(address to)\\n        external\\n        returns (uint256 amount0, uint256 amount1);\\n\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n\\n    function skim(address to) external;\\n\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x4d31be5dfc1c2dc8b1d6e22e4620e0163df2032077ed40622fb384becd7aeb42\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ILaunchEvent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nimport \\\"./IJoePair.sol\\\";\\n\\ninterface ILaunchEvent {\\n    struct UserInfo {\\n        uint256 allocation;\\n        uint256 balance;\\n        bool hasWithdrawnPair;\\n        bool hasWithdrawnIncentives;\\n    }\\n\\n    function initialize(\\n        address _issuer,\\n        uint256 _phaseOne,\\n        address _token,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external;\\n\\n    function auctionStart() external view returns (uint256);\\n\\n    function phaseOneDuration() external view returns (uint256);\\n\\n    function phaseOneNoFeeDuration() external view returns (uint256);\\n\\n    function phaseTwoDuration() external view returns (uint256);\\n\\n    function tokenIncentivesPercent() external view returns (uint256);\\n\\n    function floorPrice() external view returns (uint256);\\n\\n    function userTimelock() external view returns (uint256);\\n\\n    function issuerTimelock() external view returns (uint256);\\n\\n    function maxAllocation() external view returns (uint256);\\n\\n    function maxWithdrawPenalty() external view returns (uint256);\\n\\n    function fixedWithdrawPenalty() external view returns (uint256);\\n\\n    function rJoePerAvax() external view returns (uint256);\\n\\n    function getReserves() external view returns (uint256, uint256);\\n\\n    function token() external view returns (IERC20Metadata);\\n\\n    function pair() external view returns (IJoePair);\\n\\n    function avaxAllocated() external view returns (uint256);\\n\\n    function tokenAllocated() external view returns (uint256);\\n\\n    function pairBalance(address) external view returns (uint256);\\n\\n    function getUserInfo(address) external view returns (UserInfo memory);\\n\\n    function getPenalty() external view returns (uint256);\\n\\n    function getIncentives(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xdcfa58c190b21f014e20621bba561f5776d71629fd591af3b602e3d70035a934\",\"license\":\"MIT\"},\"contracts/interfaces/IRocketJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\ninterface IRocketJoeFactory {\\n    event RJLaunchEventCreated(\\n        address indexed launchEvent,\\n        address indexed issuer,\\n        address indexed token,\\n        uint256 phaseOneStartTime,\\n        uint256 phaseTwoStartTime,\\n        uint256 phaseThreeStartTime,\\n        address rJoe,\\n        uint256 rJoePerAvax\\n    );\\n    event SetRJoe(address indexed token);\\n    event SetPenaltyCollector(address indexed collector);\\n    event SetRouter(address indexed router);\\n    event SetFactory(address indexed factory);\\n    event SetRJoePerAvax(uint256 rJoePerAvax);\\n    event SetEventImplementation(address indexed implementation);\\n    event IssuingTokenDeposited(address indexed token, uint256 amount);\\n    event PhaseDurationChanged(uint256 phase, uint256 duration);\\n    event NoFeeDurationChanged(uint256 duration);\\n\\n    function eventImplementation() external view returns (address);\\n\\n    function penaltyCollector() external view returns (address);\\n\\n    function wavax() external view returns (address);\\n\\n    function rJoePerAvax() external view returns (uint256);\\n\\n    function router() external view returns (address);\\n\\n    function factory() external view returns (address);\\n\\n    function rJoe() external view returns (address);\\n\\n    function phaseOneDuration() external view returns (uint256);\\n\\n    function phaseOneNoFeeDuration() external view returns (uint256);\\n\\n    function phaseTwoDuration() external view returns (uint256);\\n\\n    function getRJLaunchEvent(address token)\\n        external\\n        view\\n        returns (address launchEvent);\\n\\n    function isRJLaunchEvent(address token) external view returns (bool);\\n\\n    function allRJLaunchEvents(uint256) external view returns (address pair);\\n\\n    function numLaunchEvents() external view returns (uint256);\\n\\n    function createRJLaunchEvent(\\n        address _issuer,\\n        uint256 _phaseOneStartTime,\\n        address _token,\\n        uint256 _tokenAmount,\\n        uint256 _tokenIncentivesPercent,\\n        uint256 _floorPrice,\\n        uint256 _maxWithdrawPenalty,\\n        uint256 _fixedWithdrawPenalty,\\n        uint256 _maxAllocation,\\n        uint256 _userTimelock,\\n        uint256 _issuerTimelock\\n    ) external returns (address pair);\\n\\n    function setPenaltyCollector(address) external;\\n\\n    function setRouter(address) external;\\n\\n    function setFactory(address) external;\\n\\n    function setRJoePerAvax(uint256) external;\\n\\n    function setPhaseDuration(uint256, uint256) external;\\n\\n    function setPhaseOneNoFeeDuration(uint256) external;\\n\\n    function setEventImplementation(address) external;\\n}\\n\",\"keccak256\":\"0x466e3bfe3d6c426662c153f4f6f123694ad32d67abc4fb2628fbc223f967af74\",\"license\":\"MIT\"},\"contracts/interfaces/IRocketJoeToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity 0.8.6;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IRocketJoeToken {\\n    /**\\n     * @dev Initialize variables.\\n     *\\n     * Needs to be called by RocketJoeFactory.\\n     */\\n    function initialize() external;\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `from`.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burnFrom(address from, uint256 amount) external;\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0xe08d19aa38894279672a5ef9db983c72e09130ff20866e40c9906ba311bededc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c806385392040116100de578063cc2a9a5b11610097578063ee0ce4b311610071578063ee0ce4b31461044d578063f2fde38b14610469578063f887ea4014610485578063fbaab6d9146104a35761018e565b8063cc2a9a5b146103f5578063cd8425be14610411578063d26c3f311461042f5761018e565b8063853920401461033357806386832abc146103515780638da5cb5b1461036d578063c0d786551461038b578063c45a0155146103a7578063c571287e146103c55761018e565b80635354e3b71161014b5780635dd39c19116101255780635dd39c19146102bf5780635ec112d5146102dd578063715018a6146102f9578063831b000d146103035761018e565b80635354e3b7146102575780635b7d8f05146102875780635bb47808146102a35761018e565b8063117be4c214610193578063145b0267146101b157806325e5be61146101cf578063308097b2146101ed57806333b232a91461020b5780634ccb51d01461023b575b600080fd5b61019b6104c1565b6040516101a89190612b8f565b60405180910390f35b6101b96104e7565b6040516101c69190612b8f565b60405180910390f35b6101d761050d565b6040516101e49190613023565b60405180910390f35b6101f5610513565b6040516102029190612b8f565b60405180910390f35b610225600480360381019061022091906124b1565b610539565b6040516102329190612ca6565b60405180910390f35b610255600480360381019061025091906126b9565b610559565b005b610271600480360381019061026c9190612598565b610616565b60405161027e9190612b8f565b60405180910390f35b6102a1600480360381019061029c91906124b1565b610d60565b005b6102bd60048036038101906102b891906124b1565b610ed3565b005b6102c7611046565b6040516102d49190613023565b60405180910390f35b6102f760048036038101906102f291906124b1565b61104c565b005b6103016111bf565b005b61031d600480360381019061031891906126b9565b611247565b60405161032a9190612b8f565b60405180910390f35b61033b611286565b6040516103489190613023565b60405180910390f35b61036b600480360381019061036691906126b9565b61128c565b005b61037561138d565b6040516103829190612b8f565b60405180910390f35b6103a560048036038101906103a091906124b1565b6113b7565b005b6103af61152a565b6040516103bc9190612b8f565b60405180910390f35b6103df60048036038101906103da91906124b1565b611550565b6040516103ec9190612b8f565b60405180910390f35b61040f600480360381019061040a919061250b565b611583565b005b610419611b29565b6040516104269190612b8f565b60405180910390f35b610437611b4f565b6040516104449190613023565b60405180910390f35b61046760048036038101906104629190612713565b611b55565b005b610483600480360381019061047e91906124b1565b611c79565b005b61048d611d71565b60405161049a9190612b8f565b60405180910390f35b6104ab611d97565b6040516104b89190613023565b60405180910390f35b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606d5481565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60706020528060005260406000206000915054906101000a900460ff1681565b610561611da4565b73ffffffffffffffffffffffffffffffffffffffff1661057f61138d565b73ffffffffffffffffffffffffffffffffffffffff16146105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc90612f03565b60405180910390fd5b806068819055507fd09367aecf1c1393b768cca7f6d789b6557ea9bf86dd59661861d1a98d9403978160405161060b9190613023565b60405180910390a150565b6000610620611da4565b73ffffffffffffffffffffffffffffffffffffffff1661063e61138d565b73ffffffffffffffffffffffffffffffffffffffff1614610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068b90612f03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606f60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075990612fa3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614156107d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c990612ea3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990613003565b60405180910390fd5b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614156108d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ca90612e03565b60405180910390fd5b60008911610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d90612d03565b60405180910390fd5b6000606b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a439058c606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401610997929190612baa565b60206040518083038186803b1580156109af57600080fd5b505afa1580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e791906124de565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610aa1575060008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6757600080fd5b505afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f91906126e6565b145b610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad790612f43565b60405180910390fd5b506000610b0e606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611dac565b905080606f60008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001607060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506071819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c7633828c8e73ffffffffffffffffffffffffffffffffffffffff16611e81909392919063ffffffff16565b8a73ffffffffffffffffffffffffffffffffffffffff167f5fe5f96b8b4af2407f13a18fd2590ee8e2cad65cd018333e10e6f11b110301758b604051610cbc9190613023565b60405180910390a28073ffffffffffffffffffffffffffffffffffffffff166302ee594b8e8e8e8d8d8d8d8d8d8d6040518b63ffffffff1660e01b8152600401610d0f9a99989796959493929190612c0a565b600060405180830381600087803b158015610d2957600080fd5b505af1158015610d3d573d6000803e3d6000fd5b50505050610d4d818e8d8f611f0a565b809150509b9a5050505050505050505050565b610d68611da4565b73ffffffffffffffffffffffffffffffffffffffff16610d8661138d565b73ffffffffffffffffffffffffffffffffffffffff1614610ddc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd390612f03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390612da3565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f9d58ab10a3503272153350436e1136c4dc314b98f6f384aa84b1a991f7e555a560405160405180910390a250565b610edb611da4565b73ffffffffffffffffffffffffffffffffffffffff16610ef961138d565b73ffffffffffffffffffffffffffffffffffffffff1614610f4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4690612f03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb690612d63565b60405180910390fd5b80606b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f1c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b960405160405180910390a250565b606e5481565b611054611da4565b73ffffffffffffffffffffffffffffffffffffffff1661107261138d565b73ffffffffffffffffffffffffffffffffffffffff16146110c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bf90612f03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112f90612d23565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fd131994b17764f8d7fbc48716c4498280dd3bf41fc6fc6a858798a9829fc63b060405160405180910390a250565b6111c7611da4565b73ffffffffffffffffffffffffffffffffffffffff166111e561138d565b73ffffffffffffffffffffffffffffffffffffffff161461123b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123290612f03565b60405180910390fd5b6112456000611fde565b565b6071818154811061125757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60685481565b611294611da4565b73ffffffffffffffffffffffffffffffffffffffff166112b261138d565b73ffffffffffffffffffffffffffffffffffffffff1614611308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ff90612f03565b60405180910390fd5b606c54811061134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390612ee3565b60405180910390fd5b80606d819055507fe82391fc0793ef4058d519099931d864887d0dc6b47fe1000fcc529a9d23fde7816040516113829190613023565b60405180910390a150565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113bf611da4565b73ffffffffffffffffffffffffffffffffffffffff166113dd61138d565b73ffffffffffffffffffffffffffffffffffffffff1614611433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142a90612f03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149a90612f63565b60405180910390fd5b80606a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545560405160405180910390a250565b606b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff166115ab5760008054906101000a900460ff16156115b4565b6115b36120a4565b5b6115f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ea90612e63565b60405180910390fd5b60008060019054906101000a900460ff161590508015611643576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61164b6120b5565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156116bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b290612f23565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561172b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172290612ce3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561179b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179290612d43565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561180b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180290612de3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561187b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187290612e83565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e290612e43565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561193357600080fd5b505af1158015611947573d6000803e3d6000fd5b5050505086606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555068056bc75e2d631000006068819055506202a300606c8190555062015180606d8190555062015180606e819055508015611b205760008060016101000a81548160ff0219169083151502179055505b50505050505050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606c5481565b611b5d611da4565b73ffffffffffffffffffffffffffffffffffffffff16611b7b61138d565b73ffffffffffffffffffffffffffffffffffffffff1614611bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc890612f03565b60405180910390fd5b6001821415611c2a57606d548111611c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1590612ec3565b60405180910390fd5b80606c81905550611c3c565b6002821415611c3b5780606e819055505b5b7f513fca7affc2f9c9a5d71530ff55c1afd7a6ae147d12fe3d43e38eacded9da4b8282604051611c6d92919061303e565b60405180910390a15050565b611c81611da4565b73ffffffffffffffffffffffffffffffffffffffff16611c9f61138d565b73ffffffffffffffffffffffffffffffffffffffff1614611cf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cec90612f03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5c90612d83565b60405180910390fd5b611d6e81611fde565b50565b606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000607180549050905090565b600033905090565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7390612e23565b60405180910390fd5b919050565b611f04846323b872dd60e01b858585604051602401611ea293929190612bd3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612116565b50505050565b6000606c5482611f1a91906130ec565b90506000606e5482611f2c91906130ec565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167ffeff793ff240ea180bf02cdb3b12ef7f94a8e7d1f41e615db4cc1032ea341de2868686606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606854604051611fce959493929190613067565b60405180910390a4505050505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006120af306121dd565b15905090565b600060019054906101000a900460ff16612104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fb90612fc3565b60405180910390fd5b61210c6121f0565b612114612241565b565b6000612178826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166122a29092919063ffffffff16565b90506000815111156121d85780806020019051810190612198919061268c565b6121d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ce90612fe3565b60405180910390fd5b5b505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1661223f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223690612fc3565b60405180910390fd5b565b600060019054906101000a900460ff16612290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161228790612fc3565b60405180910390fd5b6122a061229b611da4565b611fde565b565b60606122b184846000856122ba565b90509392505050565b6060824710156122ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f690612dc3565b60405180910390fd5b612308856123ce565b612347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161233e90612f83565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516123709190612b78565b60006040518083038185875af1925050503d80600081146123ad576040519150601f19603f3d011682016040523d82523d6000602084013e6123b2565b606091505b50915091506123c28282866123e1565b92505050949350505050565b600080823b905060008111915050919050565b606083156123f157829050612441565b6000835111156124045782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124389190612cc1565b60405180910390fd5b9392505050565b600081359050612457816139bc565b92915050565b60008151905061246c816139bc565b92915050565b600081519050612481816139d3565b92915050565b600081359050612496816139ea565b92915050565b6000815190506124ab816139ea565b92915050565b6000602082840312156124c7576124c66131ec565b5b60006124d584828501612448565b91505092915050565b6000602082840312156124f4576124f36131ec565b5b60006125028482850161245d565b91505092915050565b60008060008060008060c08789031215612528576125276131ec565b5b600061253689828a01612448565b965050602061254789828a01612448565b955050604061255889828a01612448565b945050606061256989828a01612448565b935050608061257a89828a01612448565b92505060a061258b89828a01612448565b9150509295509295509295565b60008060008060008060008060008060006101608c8e0312156125be576125bd6131ec565b5b60006125cc8e828f01612448565b9b505060206125dd8e828f01612487565b9a505060406125ee8e828f01612448565b99505060606125ff8e828f01612487565b98505060806126108e828f01612487565b97505060a06126218e828f01612487565b96505060c06126328e828f01612487565b95505060e06126438e828f01612487565b9450506101006126558e828f01612487565b9350506101206126678e828f01612487565b9250506101406126798e828f01612487565b9150509295989b509295989b9093969950565b6000602082840312156126a2576126a16131ec565b5b60006126b084828501612472565b91505092915050565b6000602082840312156126cf576126ce6131ec565b5b60006126dd84828501612487565b91505092915050565b6000602082840312156126fc576126fb6131ec565b5b600061270a8482850161249c565b91505092915050565b6000806040838503121561272a576127296131ec565b5b600061273885828601612487565b925050602061274985828601612487565b9150509250929050565b61275c81613142565b82525050565b61276b81613154565b82525050565b600061277c826130ba565b61278681856130d0565b935061279681856020860161318a565b80840191505092915050565b60006127ad826130c5565b6127b781856130db565b93506127c781856020860161318a565b6127d0816131f1565b840191505092915050565b60006127e86025836130db565b91506127f382613202565b604082019050919050565b600061280b6047836130db565b915061281682613251565b606082019050919050565b600061282e6018836130db565b9150612839826132c6565b602082019050919050565b60006128516026836130db565b915061285c826132ef565b604082019050919050565b60006128746028836130db565b915061287f8261333e565b604082019050919050565b60006128976026836130db565b91506128a28261338d565b604082019050919050565b60006128ba6032836130db565b91506128c5826133dc565b604082019050919050565b60006128dd6026836130db565b91506128e88261342b565b604082019050919050565b60006129006032836130db565b915061290b8261347a565b604082019050919050565b6000612923601f836130db565b915061292e826134c9565b602082019050919050565b60006129466016836130db565b9150612951826134f2565b602082019050919050565b60006129696028836130db565b91506129748261351b565b604082019050919050565b600061298c602e836130db565b91506129978261356a565b604082019050919050565b60006129af6027836130db565b91506129ba826135b9565b604082019050919050565b60006129d26024836130db565b91506129dd82613608565b604082019050919050565b60006129f56043836130db565b9150612a0082613657565b606082019050919050565b6000612a186046836130db565b9150612a23826136cc565b606082019050919050565b6000612a3b6020836130db565b9150612a4682613741565b602082019050919050565b6000612a5e6033836130db565b9150612a698261376a565b604082019050919050565b6000612a816025836130db565b9150612a8c826137b9565b604082019050919050565b6000612aa46027836130db565b9150612aaf82613808565b604082019050919050565b6000612ac7601d836130db565b9150612ad282613857565b602082019050919050565b6000612aea6028836130db565b9150612af582613880565b604082019050919050565b6000612b0d602b836130db565b9150612b18826138cf565b604082019050919050565b6000612b30602a836130db565b9150612b3b8261391e565b604082019050919050565b6000612b536023836130db565b9150612b5e8261396d565b604082019050919050565b612b7281613180565b82525050565b6000612b848284612771565b915081905092915050565b6000602082019050612ba46000830184612753565b92915050565b6000604082019050612bbf6000830185612753565b612bcc6020830184612753565b9392505050565b6000606082019050612be86000830186612753565b612bf56020830185612753565b612c026040830184612b69565b949350505050565b600061014082019050612c20600083018d612753565b612c2d602083018c612b69565b612c3a604083018b612753565b612c47606083018a612b69565b612c546080830189612b69565b612c6160a0830188612b69565b612c6e60c0830187612b69565b612c7b60e0830186612b69565b612c89610100830185612b69565b612c97610120830184612b69565b9b9a5050505050505050505050565b6000602082019050612cbb6000830184612762565b92915050565b60006020820190508181036000830152612cdb81846127a2565b905092915050565b60006020820190508181036000830152612cfc816127db565b9050919050565b60006020820190508181036000830152612d1c816127fe565b9050919050565b60006020820190508181036000830152612d3c81612821565b9050919050565b60006020820190508181036000830152612d5c81612844565b9050919050565b60006020820190508181036000830152612d7c81612867565b9050919050565b60006020820190508181036000830152612d9c8161288a565b9050919050565b60006020820190508181036000830152612dbc816128ad565b9050919050565b60006020820190508181036000830152612ddc816128d0565b9050919050565b60006020820190508181036000830152612dfc816128f3565b9050919050565b60006020820190508181036000830152612e1c81612916565b9050919050565b60006020820190508181036000830152612e3c81612939565b9050919050565b60006020820190508181036000830152612e5c8161295c565b9050919050565b60006020820190508181036000830152612e7c8161297f565b9050919050565b60006020820190508181036000830152612e9c816129a2565b9050919050565b60006020820190508181036000830152612ebc816129c5565b9050919050565b60006020820190508181036000830152612edc816129e8565b9050919050565b60006020820190508181036000830152612efc81612a0b565b9050919050565b60006020820190508181036000830152612f1c81612a2e565b9050919050565b60006020820190508181036000830152612f3c81612a51565b9050919050565b60006020820190508181036000830152612f5c81612a74565b9050919050565b60006020820190508181036000830152612f7c81612a97565b9050919050565b60006020820190508181036000830152612f9c81612aba565b9050919050565b60006020820190508181036000830152612fbc81612add565b9050919050565b60006020820190508181036000830152612fdc81612b00565b9050919050565b60006020820190508181036000830152612ffc81612b23565b9050919050565b6000602082019050818103600083015261301c81612b46565b9050919050565b60006020820190506130386000830184612b69565b92915050565b60006040820190506130536000830185612b69565b6130606020830184612b69565b9392505050565b600060a08201905061307c6000830188612b69565b6130896020830187612b69565b6130966040830186612b69565b6130a36060830185612753565b6130b06080830184612b69565b9695505050505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006130f782613180565b915061310283613180565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613137576131366131bd565b5b828201905092915050565b600061314d82613160565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156131a857808201518184015260208101905061318d565b838111156131b7576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f524a466163746f72793a20724a4f452063616e2774206265207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e20616d6f756e7420696e636c7564696e60008201527f6720696e63656e7469766573206e6565647320746f206265206772656174657260208201527f207468616e203000000000000000000000000000000000000000000000000000604082015250565b7f524a466163746f72793a2063616e2774206265206e756c6c0000000000000000600082015250565b7f524a466163746f72793a2077617661782063616e2774206265207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20666163746f72792063616e2774206265206164647260008201527f657373207a65726f000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a2070656e616c747920636f6c6c6563746f722063616e60008201527f27742062652061646472657373207a65726f0000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a2070656e616c747920636f6c6c6563746f722063616e60008201527f2774206265207a65726f20616464726573730000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e2063616e277420626520776176617800600082015250565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b7f524a466163746f72793a20666163746f72792063616e2774206265207a65726f60008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20726f757465722063616e2774206265207a65726f2060008201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a206973737565722063616e277420626520302061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a207068617365206f6e65206475726174696f6e206c6560008201527f7373207468616e206f7220657175616c20746f206e6f2066656520647572617460208201527f696f6e0000000000000000000000000000000000000000000000000000000000604082015250565b7f524a466163746f72793a206e6f20666565206475726174696f6e20677265617460008201527f6572207468616e206f7220657175616c20746f207068617365206f6e6520647560208201527f726174696f6e0000000000000000000000000000000000000000000000000000604082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f524a466163746f72793a206576656e7420696d706c656e746174696f6e20636160008201527f6e2774206265207a65726f206164647265737300000000000000000000000000602082015250565b7f524a466163746f72793a206c6971756964207061697220616c7265616479206560008201527f7869737473000000000000000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20726f757465722063616e277420626520616464726560008201527f7373207a65726f00000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f524a466163746f72793a20746f6b656e2068617320616c72656164792062656560008201527f6e20697373756564000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f524a466163746f72793a20746f6b656e2063616e27742062652030206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6139c581613142565b81146139d057600080fd5b50565b6139dc81613154565b81146139e757600080fd5b50565b6139f381613180565b81146139fe57600080fd5b5056fea2646970667358221220da763f2fc3f4bacf38e153116ad87413a25cf5944b7185350b3f25016ba5757064736f6c63430008060033",
  "devdoc": {
    "author": "Trader Joe",
    "kind": "dev",
    "methods": {
      "createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_fixedWithdrawPenalty": "Withdrawal penalty during phase 2",
          "_floorPrice": "Price of each token in AVAX, scaled to 1e18",
          "_issuer": "Address of the project issuing tokens for auction",
          "_issuerTimelock": "Amount of time issuer's LP will be locked for during phase 3",
          "_maxAllocation": "Maximum number of AVAX each participant can commit",
          "_maxWithdrawPenalty": "Maximum withdrawal penalty that can be met during phase 1",
          "_phaseOneStartTime": "Timestamp of when launch event will start",
          "_token": "Token that will be issued through this launch event",
          "_tokenAmountIncludingIncentives": "Amount of tokens that will be issued",
          "_tokenIncentivesPercent": "is the percentage of the issued tokens for sale that will be used as incentives for locking the LP during phase 3. These incentives are on top of the tokens for sale. For example, if we issue 100 tokens for sale and 5% of incentives, then 5 tokens will be given as incentives and in total the contract should have 105 tokens",
          "_userTimelock": "Amount of time users' LPs will be locked for during phase 3"
        },
        "returns": {
          "_0": "Address of launch event contract"
        }
      },
      "initialize(address,address,address,address,address,address)": {
        "details": "Uses clone factory pattern to save space",
        "params": {
          "_eventImplementation": "Implementation of launch event contract",
          "_factory": "Factory used to get info of JoePairs",
          "_penaltyCollector": "Address that collects all withdrawal penalties",
          "_rJoe": "rJOE token address",
          "_router": "Router used to create LP on Trader Joe AMM",
          "_wavax": "WAVAX token address"
        }
      },
      "numLaunchEvents()": {
        "returns": {
          "_0": "The number of launch events ever created"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setEventImplementation(address)": {
        "params": {
          "_eventImplementation": "The address of the implementation contract"
        }
      },
      "setFactory(address)": {
        "params": {
          "_factory": "New factory address"
        }
      },
      "setPenaltyCollector(address)": {
        "params": {
          "_penaltyCollector": "New penalty collector address"
        }
      },
      "setPhaseDuration(uint256,uint256)": {
        "params": {
          "_duration": "Duration of phase in seconds",
          "_phaseNumber": "Can be only 1 or 2"
        }
      },
      "setPhaseOneNoFeeDuration(uint256)": {
        "params": {
          "_noFeeDuration": "Duration of no fee phase"
        }
      },
      "setRJoePerAvax(uint256)": {
        "details": "Configured by team between launch events to control inflation"
      },
      "setRouter(address)": {
        "params": {
          "_router": "New router address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Rocket Joe Factory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createRJLaunchEvent(address,uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Creates a launch event contract"
      },
      "initialize(address,address,address,address,address,address)": {
        "notice": "initializes the launch event factory"
      },
      "numLaunchEvents()": {
        "notice": "Returns the number of launch events"
      },
      "setEventImplementation(address)": {
        "notice": "Set the proxy implementation address"
      },
      "setFactory(address)": {
        "notice": "Set JoeFactory address"
      },
      "setPenaltyCollector(address)": {
        "notice": "Set address to collect withdrawal penalties"
      },
      "setPhaseDuration(uint256,uint256)": {
        "notice": "Set duration of each of the three phases"
      },
      "setPhaseOneNoFeeDuration(uint256)": {
        "notice": "Set the no fee duration of phase 1"
      },
      "setRJoePerAvax(uint256)": {
        "notice": "Set amount of rJOE required to deposit 1 AVAX into launch event"
      },
      "setRouter(address)": {
        "notice": "Set JoeRouter address"
      }
    },
    "notice": "Factory that creates Rocket Joe events",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 132,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 135,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 487,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 124,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1218,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "penaltyCollector",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 1221,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "eventImplementation",
        "offset": 0,
        "slot": "102",
        "type": "t_address"
      },
      {
        "astId": 1224,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "rJoe",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      },
      {
        "astId": 1227,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "rJoePerAvax",
        "offset": 0,
        "slot": "104",
        "type": "t_uint256"
      },
      {
        "astId": 1230,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "wavax",
        "offset": 0,
        "slot": "105",
        "type": "t_address"
      },
      {
        "astId": 1233,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "router",
        "offset": 0,
        "slot": "106",
        "type": "t_address"
      },
      {
        "astId": 1236,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "factory",
        "offset": 0,
        "slot": "107",
        "type": "t_address"
      },
      {
        "astId": 1239,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "phaseOneDuration",
        "offset": 0,
        "slot": "108",
        "type": "t_uint256"
      },
      {
        "astId": 1242,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "phaseOneNoFeeDuration",
        "offset": 0,
        "slot": "109",
        "type": "t_uint256"
      },
      {
        "astId": 1245,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "phaseTwoDuration",
        "offset": 0,
        "slot": "110",
        "type": "t_uint256"
      },
      {
        "astId": 1250,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "getRJLaunchEvent",
        "offset": 0,
        "slot": "111",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1255,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "isRJLaunchEvent",
        "offset": 0,
        "slot": "112",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1259,
        "contract": "contracts/RocketJoeFactory.sol:RocketJoeFactory",
        "label": "allRJLaunchEvents",
        "offset": 0,
        "slot": "113",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
